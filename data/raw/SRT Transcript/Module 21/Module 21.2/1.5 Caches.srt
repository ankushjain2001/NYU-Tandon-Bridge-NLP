1
00:00:01,270 --> 00:00:06,850
So this is a generalized view of the memory
hierarchy that incorporates the cache.

2
00:00:06,850 --> 00:00:12,610
This memory hierarchy is representative of
the hierarchy found in a typical laptop.

3
00:00:12,610 --> 00:00:17,700
So the idea is the following: starting from
the bottom of the triangle, the higher you

4
00:00:17,700 --> 00:00:22,170
go, the less is the access delay, but the
smaller the memory gets.

5
00:00:22,170 --> 00:00:26,440
Therefore, we get a trade-off between speed
and size of the memory.

6
00:00:26,440 --> 00:00:31,130
At the lowest level, we have the hard disk,
which is nowadays in the range of terabytes

7
00:00:31,130 --> 00:00:33,290
and takes millions of cycles to access.

8
00:00:33,290 --> 00:00:39,390
To put it in perspective, if we have a standard
laptop, it takes 0.5 milliseconds to access

9
00:00:39,390 --> 00:00:44,110
the disk, which is pretty slow by processor
performance standards.

10
00:00:44,110 --> 00:00:49,890
At the next level, we have the main memory,
which can up to 8 gigabyte of DRAM nowadays.

11
00:00:49,890 --> 00:00:54,290
A typical access to DRAM takes several thousands
of cycles.

12
00:00:54,290 --> 00:00:57,600
Next we have the caches, which are divided
as levels.

13
00:00:57,600 --> 00:01:06,850
Typically, the processor of a laptop has two
levels of caches: Level 2 or L2 is usually

14
00:01:06,850 --> 00:01:13,469
in the range of 128 kilobyte to 2 megabyte,
can be implemented on the CPU chip or off,

15
00:01:13,469 --> 00:01:16,680
and can take up to 12 cycles to access.

16
00:01:16,680 --> 00:01:20,600
Level 1 cache or L1 cache is on the same chip
as the CPU.

17
00:01:20,600 --> 00:01:27,609
An L1 cache can range between 2 kilobyte and
32 kilobytes can take between 1 and 4 cycles

18
00:01:27,609 --> 00:01:29,020
to access.

19
00:01:29,020 --> 00:01:34,999
In most processors, there are two level one
caches, and instruction level 1 cache that

20
00:01:34,999 --> 00:01:40,520
is used for the instruction fetches of the
CPU pipeline, and a data level 1 cache that

21
00:01:40,520 --> 00:01:43,939
is for the memory stage of the pipeline.

22
00:01:43,939 --> 00:01:49,069
The upmost level of the memory hierarchy is
the general-purpose registers, which are part

23
00:01:49,069 --> 00:01:52,289
of the CPU and take one cycle to access

24
00:01:52,289 --> 00:01:57,090
So with this illustration, we can imagine
how instructions are moved across the different

25
00:01:57,090 --> 00:01:59,239
levels of the memory hierarchy.

26
00:01:59,239 --> 00:02:04,289
When we start an application, its binary and
its static data are copied from the hard disk

27
00:02:04,289 --> 00:02:06,009
to the main memory.

28
00:02:06,009 --> 00:02:10,920
When the application starts executing, code
and data are copied from the main memory to

29
00:02:10,920 --> 00:02:12,340
the caches.

30
00:02:12,340 --> 00:02:17,420
But since the caches are significantly smaller
than the main memory, data and instructions

31
00:02:17,420 --> 00:02:23,140
have to be moved back and forth between the
caches and main memory in order get the correct

32
00:02:23,140 --> 00:02:24,920
ones in the cache for execution


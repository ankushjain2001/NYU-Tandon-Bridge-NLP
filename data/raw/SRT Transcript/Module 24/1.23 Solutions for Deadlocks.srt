1
00:00:00,810 --> 00:00:05,319
So there's three ways of dealing with deadlocks:
and the first way is called deadlock prevention,

2
00:00:05,319 --> 00:00:09,510
the second is deadlock avoidance, and the
third is deadlock detection.

3
00:00:09,510 --> 00:00:14,150
Deadlock prevention requires us to take away
one of those four requirements; either we're

4
00:00:14,150 --> 00:00:17,670
going to take away no preemption, or we're
going to take away holding weight, or we're

5
00:00:17,670 --> 00:00:20,300
going to avoid the possibility of a circular
weight.

6
00:00:20,300 --> 00:00:23,960
The idea of taking away preemption, kind of
difficult, weâ€™ll talk about that in just

7
00:00:23,960 --> 00:00:24,960
a minute.

8
00:00:24,960 --> 00:00:29,550
We might have dead lock avoidance; deadlock
avoidance creates an algorithm in which we

9
00:00:29,550 --> 00:00:34,660
are going to check the system to see if a
deadlock could occur whenever we make an allocation

10
00:00:34,660 --> 00:00:35,660
for a resource.

11
00:00:35,660 --> 00:00:41,380
So, now the operating system now is going
to intervene, and say, if you're going to

12
00:00:41,380 --> 00:00:46,040
make a request if you're going to lock something,
the operating system will check the state

13
00:00:46,040 --> 00:00:51,460
of the system to see if a deadlock will occur
as a result of you're making a lock on that.

14
00:00:51,460 --> 00:00:55,190
And if a deadlock will occur as the result
of you're making a lock on that device, the

15
00:00:55,190 --> 00:01:00,120
lock is not approved and the thread is either
told to go do something else or it's blocked

16
00:01:00,120 --> 00:01:02,320
all together until the lock can be approved.

17
00:01:02,320 --> 00:01:07,619
So, deadlock avoidance says we recognize that
all four requirements for a deadlock are in

18
00:01:07,619 --> 00:01:16,369
play, however, we're going to avoid the deadlock
by preventing such a situation just from occurring.

19
00:01:16,369 --> 00:01:19,729
Deadlock detection is the last way and it's
the easiest way, it just says deadlocks are

20
00:01:19,729 --> 00:01:24,689
going to happen we'll let them happen and
periodically we'll just check to make sure

21
00:01:24,689 --> 00:01:28,960
that if there are any dead locks that we just
deal with them in some method.

22
00:01:28,960 --> 00:01:35,979
So, deadlock detection is the easiest, so
to speak but it's also the most difficult

23
00:01:35,979 --> 00:01:37,590
to deal with after the fact.

24
00:01:37,590 --> 00:01:42,149
So, now we have to deal with the fact that
a deadlock has occurred, and we have to recover

25
00:01:42,149 --> 00:01:43,149
from it.

26
00:01:43,149 --> 00:01:46,009
Those are our solutions that we have for dead
locks and we're going to look at them individually.


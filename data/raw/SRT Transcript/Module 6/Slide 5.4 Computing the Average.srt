0:00:00.570,0:00:03.370
Ok so let’s implement this program here.

0:00:03.370,0:00:10.290
So first let’s tell the user the instructions
so cout enter the grades separated by space.

0:00:10.290,0:00:13.349
Let’s have it in two separated lines.

0:00:13.349,0:00:19.170
So let’s end one line here and now let’s
just tell the user enter the sequence by typing

0:00:19.170,0:00:21.689
negative one and break the line.

0:00:21.689,0:00:27.539
Ok so now we should start reading the numbers
and adding them and counting them.

0:00:27.539,0:00:30.919
So we would have as we said a while loop right.

0:00:30.919,0:00:36.460
But in order to control this while loop we
said we are going to use flag which is a Boolean

0:00:36.460,0:00:37.460
variable.

0:00:37.460,0:00:38.850
We won’t name it flag.

0:00:38.850,0:00:44.070
Let’s try to find a name that more represents
what this flag basically stores.

0:00:44.070,0:00:50.680
Let’s name this flag maybe seen end of input.

0:00:50.680,0:00:56.059
When you choose a name for a flag or for a
Boolean variable I think it is a good practice

0:00:56.059,0:01:00.000
to choose a name that you want to respond
by saying yes or no.

0:01:00.000,0:01:03.039
Seen end of input is either yes or no true
or false.

0:01:03.039,0:01:05.640
So that’s a reasonable name for a flag.

0:01:05.640,0:01:11.420
We said we have to initialize seen end of
input to false.

0:01:11.420,0:01:17.060
And basically we want to keep on repeating
the statements in the while loop while seen

0:01:17.060,0:01:19.450
end of input is still false.

0:01:19.450,0:01:22.130
When it turns to true we want to break out.

0:01:22.130,0:01:25.979
So this is basically the structure of our
program here.

0:01:25.979,0:01:30.649
We just need here to read the input add it
count it.

0:01:30.649,0:01:32.369
Read add count and so on.

0:01:32.369,0:01:37.950
In order to accumulate the sum and the amount
of numbers we would use two variables.

0:01:37.950,0:01:42.490
One for the sum and one for number of students.

0:01:42.490,0:01:46.250
We would need to initialize both of them before
we start iterating.

0:01:46.250,0:01:52.590
So sum would be initialized to 0 and number
of students would also be initialized to 0.

0:01:52.590,0:02:00.149
And then we should just each iteration read
the current input let’s just declare current.

0:02:00.149,0:02:03.799
And we should add it and count it right.

0:02:03.799,0:02:09.630
But we should be careful here because actually
all the grades should be added and counted

0:02:09.630,0:02:13.840
but if the input is negative one we basically
want to break out of the loop.

0:02:13.840,0:02:22.660
So before adding to sum and counting by incrementing
number of students let’s check if our current

0:02:22.660,0:02:25.220
input is negative one.

0:02:25.220,0:02:27.580
In this case double equal obviously.

0:02:27.580,0:02:31.710
In this case what we want to do is raise the
flag.

0:02:31.710,0:02:35.550
So seen end of input equals true.

0:02:35.550,0:02:42.000
And if it is not if it is not negative one
only then we want to accumulate it into sum

0:02:42.000,0:02:43.340
and number of students.

0:02:43.340,0:02:51.680
So sum plus equals our current input and number
of students should just increase.

0:02:51.680,0:02:57.900
So taking a second look here we first initialize
our accumulating variables sum and number

0:02:57.900,0:02:58.900
of students.

0:02:58.900,0:03:03.800
We initialize our flag to be down seen end
of input false.

0:03:03.800,0:03:09.630
And while our flag is down is basically read
an input figure out if we want to raise the

0:03:09.630,0:03:11.200
flag if it is negative one.

0:03:11.200,0:03:18.000
Otherwise we accumulate the current input
we add it to sum we count it as one of our

0:03:18.000,0:03:19.440
valid grades.

0:03:19.440,0:03:21.430
We increment number of students.

0:03:21.430,0:03:26.440
So as long as our current is a grade we just
accumulate it accumulate it and accumulate

0:03:26.440,0:03:27.440
it.

0:03:27.440,0:03:32.550
Once our current is negative one we raise
the flag the Boolean condition is then checked

0:03:32.550,0:03:35.760
and that makes this break out of the loop.

0:03:35.760,0:03:42.000
After we do that basically we just calculate
the average so just as before let’s declare

0:03:42.000,0:03:51.130
a double average variable and let’s assign
average to let’s cast sum and divide it

0:03:51.130,0:03:52.800
by the number of students.

0:03:52.800,0:03:57.430
Once again let’s cast number of students
so then we get the average.

0:03:57.430,0:04:05.200
Now we can announce the class average is and
the value of the average variable and break

0:04:05.200,0:04:06.200
the line.

0:04:06.200,0:04:09.790
Let’s execute it see that we didn’t make
any silly mistakes here ok.

0:04:09.790,0:04:14.000
Enter the grades separated by space and your
sequence by typing negative one.

0:04:14.000,0:04:21.810
So let’s say 90 87 76 89 and -1.

0:04:21.810,0:04:25.600
And then the class average is 85.5 which is
good.

0:04:25.600,0:04:30.230
You can see that we didn’t know how many
numbers there were going to be.

0:04:30.230,0:04:32.890
That made us choose a while loop here.

0:04:32.890,0:04:38.340
That’s typical when we don’t know how
many how long or how big is the how many times

0:04:38.340,0:04:39.590
we want to repeat.

0:04:39.590,0:04:43.320
That’s usually when we pick when we choose
a while statement.

0:04:43.320,0:04:49.130
When we know the range of number of iterations
we want to do then we choose a for loop just

0:04:49.130,0:04:51.260
as we had in the counting program.

0:04:51.260,0:04:55.930
It was a more readable more clear when we
use the for loop.

0:04:55.930,0:05:01.160
It was also in the first version of calculating
the average when we knew we wanted to repeat

0:05:01.160,0:05:04.650
number of students iterations we also chose
a for loop.

0:05:04.650,0:05:09.950
But when we don’t know how many iterations
we want to have a while loop is a better choice

0:05:09.950,0:05:11.930
that what happened here.

0:05:11.930,0:05:16.600
That was what happened when we calculated
the sum of the digits of the number.

0:05:16.600,0:05:20.060
We didn’t know how many digits there were
going to be so we used a while loop as long

0:05:20.060,0:05:25.150
as we still have digits we want to keep on
extracting the digits and adding it.

0:05:25.150,0:05:30.500
So again as a rule of thumb here when you
know the number of iterations you typically

0:05:30.500,0:05:31.940
choose for loop.

0:05:31.940,0:05:34.800
When you don’t know it is more common to
use a while loop.
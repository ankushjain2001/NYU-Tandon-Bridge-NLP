[
    {
        "homework_no": 1,
        "file_name": "hw1.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "A. Convert",
                    "the",
                    "following",
                    "numbers",
                    "to",
                    "their",
                    "decimal",
                    "representation.",
                    "Show",
                    "your",
                    "work.",
                    "1. 100110112",
                    "=\u2028",
                    "2. 4567",
                    "=\u2028",
                    "3. 38A16",
                    "=",
                    "4. 22145",
                    "=",
                    "B. Convert",
                    "the",
                    "following",
                    "numbers",
                    "to",
                    "their",
                    "binary",
                    "representation:",
                    "1. 6910",
                    "=\u2028",
                    "2. 48510=\u2028",
                    "3. 6D1A16",
                    "=",
                    "C. Convert",
                    "the",
                    "following",
                    "numbers",
                    "to",
                    "their",
                    "hexadecimal",
                    "representation:",
                    "1. 11010112",
                    "=\u2028",
                    "2. 89510",
                    "="
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question",
                    "2:",
                    "Solve",
                    "the",
                    "following,",
                    "do",
                    "all",
                    "calculation",
                    "in",
                    "the",
                    "given",
                    "base.",
                    "Show",
                    "your",
                    "work.",
                    "1. ",
                    "75668",
                    "+",
                    "45158",
                    "=",
                    "\u2028",
                    "2. ",
                    "101100112",
                    "+",
                    "11012",
                    "=",
                    "\u2028",
                    "3. ",
                    "7A6616",
                    "+",
                    "45C516",
                    "=",
                    "\u2028",
                    "4. ",
                    "30225",
                    "-",
                    "24335",
                    "="
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question",
                    "3:",
                    "A. Convert",
                    "the",
                    "following",
                    "numbers",
                    "to",
                    "their",
                    "8-bits",
                    "two\u2019s",
                    "complement",
                    "representation.",
                    "Show",
                    "your",
                    "work.",
                    "1. 12410",
                    "=\u2028",
                    "2. -12410",
                    "=\u2028",
                    "3. 10910",
                    "=",
                    "4. -7910",
                    "=",
                    "B. Convert",
                    "the",
                    "following",
                    "numbers",
                    "(represented",
                    "as",
                    "8-bit",
                    "two\u2019s",
                    "complement)",
                    "to",
                    "their",
                    "decimal",
                    "representation.",
                    "Show",
                    "your",
                    "work.",
                    "1. 000111108",
                    "bit",
                    "2\u2019s",
                    "comp",
                    "=",
                    "2. 111001108",
                    "bit",
                    "2\u2019s",
                    "comp",
                    "=",
                    "3. 001011018",
                    "bit",
                    "2\u2019s",
                    "comp",
                    "=",
                    "4. 100111108",
                    "bit",
                    "2\u2019s",
                    "comp",
                    "=",
                    " "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question",
                    "4:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.2.4,",
                    "sections",
                    "b,",
                    "c",
                    "2. Exercise",
                    "1.3.4,",
                    "sections",
                    "b,",
                    "d"
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question",
                    "5:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.2.7,",
                    "sections",
                    "b,",
                    "c",
                    "2. Exercise",
                    "1.3.7,",
                    "sections",
                    "b",
                    "\u2013",
                    "e",
                    "3. Exercise",
                    "1.3.9,",
                    "sections",
                    "c,",
                    "d"
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question",
                    "6:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.3.6,",
                    "sections",
                    "b",
                    "-",
                    "d",
                    "2. Exercise",
                    "1.3.10,",
                    "sections",
                    "c",
                    "\u2013",
                    "f"
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question",
                    "7:",
                    "Solve",
                    "Exercise",
                    "1.4.5,",
                    "sections",
                    "b",
                    "\u2013",
                    "d,",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:"
                ]
            },
            {
                "question_no": 8,
                "data": [
                    "Question",
                    "8:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.5.2,",
                    "sections",
                    "c,",
                    "f,",
                    "i",
                    "2. Exercise",
                    "1.5.3,",
                    "sections",
                    "c,",
                    "d"
                ]
            },
            {
                "question_no": 9,
                "data": [
                    "Question",
                    "9:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.6.3,",
                    "sections",
                    "c,",
                    "d",
                    "2. Exercise",
                    "1.7.4,",
                    "sections",
                    "b",
                    "-",
                    "d"
                ]
            },
            {
                "question_no": 10,
                "data": [
                    "Question",
                    "10:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.7.9,",
                    "sections",
                    "c",
                    "-",
                    "i",
                    "2. Exercise",
                    "1.9.2,",
                    "sections",
                    "b",
                    "-",
                    "i"
                ]
            },
            {
                "question_no": 11,
                "data": [
                    "Question",
                    "11:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.10.4,",
                    "sections",
                    "c",
                    "-",
                    "g",
                    "2. Exercise",
                    "1.10.7,",
                    "sections",
                    "c",
                    "-",
                    "f",
                    "3. Exercise",
                    "1.10.10,",
                    "sections",
                    "c",
                    "\u2013",
                    "f"
                ]
            },
            {
                "question_no": 12,
                "data": [
                    "Question",
                    "12:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.8.2,",
                    "sections",
                    "b",
                    "\u2013",
                    "e",
                    "2. Exercise",
                    "1.9.4,",
                    "sections",
                    "c",
                    "-",
                    "e"
                ]
            }
        ]
    },
    {
        "homework_no": 2,
        "file_name": "hw2.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "asks",
                    "the",
                    "user",
                    "to",
                    "enter",
                    "a",
                    "number",
                    "of",
                    "quarters,",
                    "dimes,",
                    "nickels",
                    "and",
                    "pennies",
                    "and",
                    "then",
                    "outputs",
                    "the",
                    "monetary",
                    "value",
                    "of",
                    "the",
                    "coins",
                    "in",
                    "the",
                    "format",
                    "of",
                    "dollars",
                    "and",
                    "remaining",
                    "cents.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "number",
                    "of",
                    "coins:",
                    "#",
                    "of",
                    "quarters:",
                    "13",
                    "#",
                    "of",
                    "dimes:",
                    "4",
                    "#",
                    "of",
                    "nickels:",
                    "11",
                    "#",
                    "of",
                    "pennies:",
                    "17",
                    "The",
                    "total",
                    "is",
                    "4",
                    "dollars",
                    "and",
                    "37",
                    "cents"
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question",
                    "2:",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "asks",
                    "the",
                    "user",
                    "to",
                    "enter",
                    "an",
                    "amount",
                    "of",
                    "money",
                    "in",
                    "the",
                    "format",
                    "of",
                    "dollars",
                    "and",
                    "remaining",
                    "cents.",
                    "The",
                    "program",
                    "should",
                    "calculate",
                    "and",
                    "print",
                    "the",
                    "minimum",
                    "number",
                    "of",
                    "coins",
                    "(quarters,",
                    "dimes,",
                    "nickels",
                    "and",
                    "pennies)",
                    "that",
                    "are",
                    "equivalent",
                    "to",
                    "the",
                    "given",
                    "amount.",
                    "Hint:",
                    "In",
                    "order",
                    "to",
                    "find",
                    "the",
                    "minimum",
                    "number",
                    "of",
                    "coins,",
                    "first",
                    "find",
                    "the",
                    "maximum",
                    "number",
                    "of",
                    "quarters",
                    "that",
                    "fit",
                    "in",
                    "the",
                    "given",
                    "amount",
                    "of",
                    "money,",
                    "then",
                    "find",
                    "the",
                    "maximum",
                    "number",
                    "of",
                    "dimes",
                    "that",
                    "fit",
                    "in",
                    "the",
                    "remaining",
                    "amount,",
                    "and",
                    "so",
                    "on.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "your",
                    "amount",
                    "in",
                    "the",
                    "format",
                    "of",
                    "dollars",
                    "and",
                    "cents",
                    "separated",
                    "by",
                    "a",
                    "space:",
                    "4",
                    "37",
                    "4",
                    "dollars",
                    "and",
                    "37",
                    "cents",
                    "are:",
                    "17",
                    "quarters,",
                    "1",
                    "dimes,",
                    "0",
                    "nickels",
                    "and",
                    "2",
                    "pennies"
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question",
                    "3:",
                    "Suppose",
                    "John",
                    "and",
                    "Bill",
                    "worked",
                    "for",
                    "some",
                    "time",
                    "and",
                    "we",
                    "want",
                    "to",
                    "calculate",
                    "the",
                    "total",
                    "time",
                    "both",
                    "of",
                    "them",
                    "worked.",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "reads",
                    "number",
                    "of",
                    "days,",
                    "hours,",
                    "minutes",
                    "each",
                    "of",
                    "them",
                    "worked,",
                    "and",
                    "prints",
                    "the",
                    "total",
                    "time",
                    "both",
                    "of",
                    "them",
                    "worked",
                    "together",
                    "as",
                    "days,",
                    "hours,",
                    "minutes.",
                    "Hint:",
                    "Try",
                    "to",
                    "adapt",
                    "the",
                    "elementary",
                    "method",
                    "for",
                    "addition",
                    "of",
                    "numbers",
                    "to",
                    "this",
                    "use.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "the",
                    "number",
                    "of",
                    "days",
                    "John",
                    "has",
                    "worked:",
                    "2",
                    "Please",
                    "enter",
                    "the",
                    "number",
                    "of",
                    "hours",
                    "John",
                    "has",
                    "worked:",
                    "12",
                    "Please",
                    "enter",
                    "the",
                    "number",
                    "of",
                    "minutes",
                    "John",
                    "has",
                    "worked:",
                    "15",
                    "Please",
                    "enter",
                    "the",
                    "number",
                    "of",
                    "days",
                    "Bill",
                    "has",
                    "worked:",
                    "3",
                    "Please",
                    "enter",
                    "the",
                    "number",
                    "of",
                    "hours",
                    "Bill",
                    "has",
                    "worked:",
                    "15",
                    "Please",
                    "enter",
                    "the",
                    "number",
                    "of",
                    "minutes",
                    "Bill",
                    "has",
                    "worked:",
                    "20",
                    "The",
                    "total",
                    "time",
                    "both",
                    "of",
                    "them",
                    "worked",
                    "together",
                    "is:",
                    "6",
                    "days,",
                    "3",
                    "hours",
                    "and",
                    "35",
                    "minutes.",
                    " "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question",
                    "4:",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "reads",
                    "from",
                    "the",
                    "user",
                    "two",
                    "positive",
                    "integers,",
                    "and",
                    "prints",
                    "the",
                    "result",
                    "of",
                    "when",
                    "we",
                    "add,",
                    "subtract",
                    "multiply,",
                    "divide,",
                    "div",
                    "and",
                    "mod",
                    "them.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "two",
                    "positive",
                    "integers,",
                    "separated",
                    "by",
                    "a",
                    "space:",
                    "14",
                    "4",
                    "14",
                    "+",
                    "4",
                    "=",
                    "18",
                    "14",
                    "\u2013",
                    "4",
                    "=",
                    "10",
                    "14",
                    "*",
                    "4",
                    "=",
                    "56",
                    "14",
                    "/",
                    "4",
                    "=",
                    "3.5",
                    "14",
                    "div",
                    "4",
                    "=",
                    "3",
                    "14",
                    "mod",
                    "4",
                    "=",
                    "2",
                    "   "
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question",
                    "5:",
                    " a) Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.12.2,",
                    "sections",
                    "b,",
                    "e",
                    "2. Exercise",
                    "1.12.3,",
                    "section",
                    "c",
                    "3. Exercise",
                    "1.12.5,",
                    "sections",
                    "c,",
                    "d",
                    "b) Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "1. Exercise",
                    "1.13.3,",
                    "section",
                    "b",
                    "2. Exercise",
                    "1.13.5,",
                    "sections",
                    "d,",
                    "e"
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question",
                    "6:",
                    "Solve",
                    "Exercise",
                    "2.2.1,",
                    "sections",
                    "d,",
                    "c,",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:"
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question",
                    "7:",
                    "Solve",
                    "Exercise",
                    "2.3.1,",
                    "sections",
                    "d,",
                    "f,",
                    "g,",
                    "l,",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:"
                ]
            },
            {
                "question_no": 8,
                "data": [
                    "Question",
                    "8:",
                    "Solve",
                    "Exercise",
                    "2.4.1,",
                    "sections",
                    "c,",
                    "e,",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:"
                ]
            },
            {
                "question_no": 9,
                "data": [
                    "Question",
                    "9:",
                    "Solve",
                    "Exercise",
                    "2.5.1,",
                    "section",
                    "c,",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:"
                ]
            }
        ]
    },
    {
        "homework_no": 3,
        "file_name": "hw3.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "computes",
                    "how",
                    "much",
                    "a",
                    "customer",
                    "has",
                    "to",
                    "pay",
                    "after",
                    "purchasing",
                    "two",
                    "items.",
                    "The",
                    "price",
                    "is",
                    "calculated",
                    "according",
                    "to",
                    "the",
                    "following",
                    "rules:",
                    "\u2022 Buy",
                    "one",
                    "get",
                    "one",
                    "half",
                    "off",
                    "promotion:",
                    "the",
                    "lower",
                    "price",
                    "item",
                    "is",
                    "half",
                    "price.",
                    "\u2022 If",
                    "the",
                    "customer",
                    "is",
                    "club",
                    "card",
                    "member,",
                    "additional",
                    "10%",
                    "off.",
                    "\u2022 Tax",
                    "is",
                    "added.",
                    "Inputs",
                    "to",
                    "the",
                    "program",
                    "include:",
                    "\u2022 Two",
                    "items\u2019",
                    "prices",
                    "\u2022 Have",
                    "club",
                    "card",
                    "or",
                    "not",
                    "(User",
                    "enters",
                    "\u2018Y\u2019",
                    "or",
                    "\u2018y\u2019",
                    "for",
                    "\u201cyes\u201d;",
                    "\u2018N\u2019",
                    "or",
                    "\u2018n\u2019",
                    "for",
                    "\u201cno\u201d)",
                    "\u2022 Tax",
                    "rate",
                    "(User",
                    "enters",
                    "the",
                    "percentage",
                    "as",
                    "a",
                    "number;",
                    "for",
                    "example",
                    "they",
                    "enter",
                    "8.25",
                    "if",
                    "the",
                    "tax",
                    "rate",
                    "is",
                    "8.25%)",
                    "Program",
                    "displays:",
                    "\u2022 Base",
                    "price",
                    "-",
                    "the",
                    "price",
                    "before",
                    "the",
                    "discounts",
                    "and",
                    "taxes",
                    "\u2022 Price",
                    "after",
                    "discounts",
                    "-",
                    "the",
                    "price",
                    "after",
                    "the",
                    "buy",
                    "one",
                    "get",
                    "one",
                    "half",
                    "off",
                    "promotion",
                    "and",
                    "the",
                    "member\u2019s",
                    "discount,",
                    "if",
                    "applicable",
                    "\u2022 Total",
                    "price",
                    "\u2013",
                    "the",
                    "amount",
                    "of",
                    "money",
                    "the",
                    "customer",
                    "has",
                    "to",
                    "pay",
                    "(after",
                    "tax).",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Enter",
                    "price",
                    "of",
                    "first",
                    "item:",
                    "10",
                    "Enter",
                    "price",
                    "of",
                    "second",
                    "item:",
                    "20",
                    "Does",
                    "customer",
                    "have",
                    "a",
                    "club",
                    "card?",
                    "(Y/N):",
                    "y",
                    "Enter",
                    "tax",
                    "rate,",
                    "e.g.",
                    "5.5",
                    "for",
                    "5.5%",
                    "tax:",
                    "8.25",
                    "Base",
                    "price:",
                    "30.0",
                    "Price",
                    "after",
                    "discounts:",
                    "22.5",
                    "Total",
                    "price:",
                    "24.35625"
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question",
                    "2:",
                    "Write",
                    "a",
                    "program",
                    "that:",
                    "\u2022 Asks",
                    "the",
                    "user",
                    "for",
                    "their",
                    "name.",
                    "\u2022 Asks",
                    "the",
                    "user",
                    "to",
                    "input",
                    "their",
                    "graduation",
                    "year.",
                    "\u2022 Asks",
                    "the",
                    "user",
                    "to",
                    "input",
                    "the",
                    "current",
                    "year.",
                    "Assume",
                    "the",
                    "student",
                    "is",
                    "in",
                    "a",
                    "four-year",
                    "undergraduate",
                    "program.",
                    "Display",
                    "the",
                    "current",
                    "status",
                    "the",
                    "student",
                    "is",
                    "in.",
                    "Possible",
                    "status",
                    "include:",
                    "not",
                    "in",
                    "college",
                    "yet,",
                    "freshman,",
                    "sophomore,",
                    "junior,",
                    "senior,",
                    "graduated.",
                    "Note:",
                    "If",
                    "graduation",
                    "year",
                    "equals",
                    "to",
                    "current",
                    "year,",
                    "status",
                    "is",
                    "\u2018Graduated\u2019;",
                    "if",
                    "graduation",
                    "year",
                    "is",
                    "four",
                    "years",
                    "after",
                    "current",
                    "year,",
                    "status",
                    "is",
                    "\u2018Freshman\u2019,",
                    "etc.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "your",
                    "name:",
                    "Jessica",
                    "Please",
                    "enter",
                    "your",
                    "graduation",
                    "year:",
                    "2019",
                    "Please",
                    "enter",
                    "current",
                    "year:",
                    "2015",
                    "Jessica,",
                    "you",
                    "are",
                    "a",
                    "Freshman"
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question",
                    "3:",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "does",
                    "the",
                    "following:",
                    "\u2022 Ask",
                    "user",
                    "to",
                    "input",
                    "three",
                    "Real",
                    "numbers",
                    "a,",
                    "b",
                    "and",
                    "c.",
                    "They",
                    "represent",
                    "the",
                    "parameters",
                    "of",
                    "a",
                    "quadratic",
                    "equation",
                    "\ud835\udc4e\ud835\udc65! + \ud835\udc4f\ud835\udc65 + \ud835\udc50 = 0",
                    "\u2022 Classify",
                    "to",
                    "one",
                    "of",
                    "the",
                    "following:",
                    "- \u2019Infinite",
                    "number",
                    "of",
                    "solutions\u2019",
                    "(for",
                    "example,",
                    "0\ud835\udc65! + 0\ud835\udc65 + 0 = 0",
                    "has",
                    "infinite",
                    "number",
                    "of",
                    "solutions)",
                    "- \u2019No",
                    "solution\u2019",
                    "(for",
                    "example,",
                    "0\ud835\udc65! + 0\ud835\udc65 + 4 = 0",
                    "has",
                    "no",
                    "solution)",
                    "- \u2019No",
                    "real",
                    "solution\u2019",
                    "(for",
                    "example,",
                    "\ud835\udc65! + 4 = 0",
                    "has",
                    "no",
                    "real",
                    "solutions)",
                    "- \u2019One",
                    "real",
                    "solution\u2019",
                    "- \u2019Two",
                    "real",
                    "solutions\u2019",
                    "\u2022 In",
                    "cases",
                    "there",
                    "are",
                    "1",
                    "or",
                    "2",
                    "real",
                    "solutions,",
                    "also",
                    "print",
                    "the",
                    "solutions.",
                    "Notes:",
                    "1. If",
                    "\ud835\udc4e \u2260 0",
                    "and",
                    "there",
                    "are",
                    "real",
                    "solutions",
                    "to",
                    "the",
                    "equation,",
                    "you",
                    "can",
                    "get",
                    "these",
                    "solutions",
                    "using",
                    "the",
                    "following",
                    "formula:",
                    "\ud835\udc65\",! =\u2212\ud835\udc4f \u00b1 \u221a\ud835\udc4f! \u2212 4\ud835\udc4e\ud835\udc502\ud835\udc4e",
                    "The",
                    "number",
                    "of",
                    "solutions",
                    "depends",
                    "on",
                    "whether",
                    "(b2",
                    "-4ac)",
                    "is",
                    "positive,",
                    "zero,",
                    "or",
                    "negative.",
                    "2. In",
                    "order",
                    "to",
                    "calculate",
                    "the",
                    "square",
                    "root",
                    "of",
                    "a",
                    "number",
                    "(of",
                    "type",
                    "double),",
                    "you",
                    "should",
                    "call",
                    "the",
                    "sqrt",
                    "function,",
                    "located",
                    "in",
                    "the",
                    "cmath",
                    "library.",
                    "Follow",
                    "the",
                    "syntax",
                    "as",
                    "demonstrated",
                    "in",
                    "the",
                    "code",
                    "below:",
                    "#include <iostream> #include <cmath> using namespace std;  int main() {     double x = 2.0;     double sqrtResult;          sqrtResult = sqrt(x);     cout<<sqrtResult<<endl;      return 0; } Note",
                    "that",
                    "you",
                    "first",
                    "need",
                    "to",
                    "include",
                    "the",
                    "cmath",
                    "library,",
                    "and",
                    "then",
                    "you",
                    "can",
                    "call",
                    "the",
                    "sqrt",
                    "function,",
                    "passing",
                    "the",
                    "argument",
                    "that",
                    "you",
                    "want",
                    "to",
                    "calculate",
                    "the",
                    "square",
                    "root",
                    "of,",
                    "enclosed",
                    "in",
                    "parentheses.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "value",
                    "of",
                    "a:",
                    "1",
                    "Please",
                    "enter",
                    "value",
                    "of",
                    "b:",
                    "4",
                    "Please",
                    "enter",
                    "value",
                    "of",
                    "c:",
                    "4",
                    "This",
                    "equation",
                    "has",
                    "a",
                    "single",
                    "real",
                    "solution",
                    "x=-2.0",
                    " "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question",
                    "4:",
                    "Define",
                    "the",
                    "following",
                    "constants:",
                    "const int FLOOR_ROUND = 1; const int CEILING_ROUND = 2; const int ROUND = 3;",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "asks",
                    "the",
                    "user",
                    "to",
                    "enter",
                    "a",
                    "Real",
                    "number,",
                    "then",
                    "it",
                    "asks",
                    "the",
                    "user",
                    "to",
                    "enter",
                    "the",
                    "method",
                    "by",
                    "which",
                    "they",
                    "want",
                    "to",
                    "round",
                    "that",
                    "number",
                    "(floor,",
                    "ceiling",
                    "or",
                    "to",
                    "the",
                    "nearest",
                    "integer).",
                    "The",
                    "program",
                    "will",
                    "then",
                    "print",
                    "the",
                    "rounded",
                    "result.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "a",
                    "Real",
                    "number:",
                    "4.78",
                    "Choose",
                    "your",
                    "rounding",
                    "method:",
                    "1.",
                    "Floor",
                    "round",
                    "2.",
                    "Ceiling",
                    "round",
                    "3.",
                    "Round",
                    "to",
                    "the",
                    "nearest",
                    "whole",
                    "number",
                    "2",
                    "5",
                    "Implementation",
                    "requirement:",
                    "Use",
                    "a",
                    "switch",
                    "statement."
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question",
                    "5:",
                    "Body",
                    "mass",
                    "index",
                    "(BMI)",
                    "is",
                    "a",
                    "number",
                    "calculated",
                    "from",
                    "a",
                    "person\u2019s",
                    "weight",
                    "and",
                    "height",
                    "using",
                    "the",
                    "following",
                    "formula:",
                    "\ud835\udc64\ud835\udc52\ud835\udc56\ud835\udc54\u210e\ud835\udc61/\u210e\ud835\udc52\ud835\udc56\ud835\udc54\u210e\ud835\udc61!.",
                    "Where",
                    "\ud835\udc64\ud835\udc52\ud835\udc56\ud835\udc54\u210e\ud835\udc61",
                    "is",
                    "in",
                    "kilograms",
                    "and",
                    "\u210e\ud835\udc52\ud835\udc56\ud835\udc54\u210e\ud835\udc61",
                    "is",
                    "in",
                    "meters.",
                    "According",
                    "to",
                    "the",
                    "Centers",
                    "for",
                    "Disease",
                    "Control",
                    "and",
                    "Prevention,",
                    "the",
                    "BMI",
                    "is",
                    "a",
                    "fairly",
                    "reliable",
                    "indicator",
                    "of",
                    "body",
                    "fatness",
                    "for",
                    "most",
                    "people.",
                    "BMI",
                    "does",
                    "not",
                    "measure",
                    "body",
                    "fat",
                    "directly,",
                    "but",
                    "research",
                    "has",
                    "shown",
                    "that",
                    "BMI",
                    "correlates",
                    "to",
                    "direct",
                    "measures",
                    "of",
                    "body",
                    "fat,",
                    "such",
                    "as",
                    "underwater",
                    "weighing",
                    "and",
                    "dual-energy",
                    "X-ray",
                    "absorptiometry.",
                    "The",
                    "following",
                    "table",
                    "gives",
                    "the",
                    "weight",
                    "status",
                    "in",
                    "respect",
                    "to",
                    "the",
                    "BMI",
                    "value:",
                    "BMI",
                    "Range",
                    " Weight",
                    "Status",
                    "Below",
                    "18.5",
                    " Underweight",
                    "[18.5,",
                    "25)",
                    " Normal",
                    "[25,",
                    "30)",
                    " Overweight",
                    "30",
                    "and",
                    "above",
                    " Obese",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "prompts",
                    "for",
                    "weight",
                    "(in",
                    "pounds)",
                    "and",
                    "height",
                    "(in",
                    "inches)",
                    "of",
                    "a",
                    "person,",
                    "and",
                    "prints",
                    "the",
                    "weight",
                    "status",
                    "of",
                    "that",
                    "person.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "weight",
                    "(in",
                    "pounds):",
                    "135",
                    "Please",
                    "enter",
                    "height",
                    "(in",
                    "inches):",
                    "71",
                    "The",
                    "weight",
                    "status",
                    "is:",
                    "Normal",
                    "Note:",
                    "1",
                    "pound",
                    "is",
                    "0.453592",
                    "kilograms",
                    "and",
                    "1",
                    "inch",
                    "is",
                    "0.0254",
                    "meters."
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question",
                    "6:",
                    "Write",
                    "a",
                    "program",
                    "that",
                    "computes",
                    "the",
                    "cost",
                    "of",
                    "a",
                    "long-distance",
                    "call.",
                    "The",
                    "cost",
                    "of",
                    "\u2028the",
                    "call",
                    "is",
                    "determined",
                    "according",
                    "to",
                    "the",
                    "following",
                    "rate",
                    "schedule:",
                    "\u2022 Any",
                    "call",
                    "started",
                    "between",
                    "8:00",
                    "A.M.",
                    "and",
                    "6:00",
                    "P.M.,",
                    "Monday",
                    "through",
                    "Friday,",
                    "is",
                    "billed",
                    "at",
                    "a",
                    "rate",
                    "of",
                    "$0.40",
                    "per",
                    "minute.",
                    "\u2028",
                    "\u2022 Any",
                    "call",
                    "starting",
                    "before",
                    "8:00",
                    "A.M.",
                    "or",
                    "after",
                    "6:00",
                    "P.M.,",
                    "Monday",
                    "through",
                    "Friday,",
                    "is",
                    "charged",
                    "at",
                    "a",
                    "rate",
                    "of",
                    "$0.25",
                    "per",
                    "minute.",
                    "\u2028",
                    "\u2022 Any",
                    "call",
                    "started",
                    "on",
                    "a",
                    "Saturday",
                    "or",
                    "Sunday",
                    "is",
                    "charged",
                    "at",
                    "a",
                    "rate",
                    "of",
                    "$0.15",
                    "per",
                    "minute.",
                    "\u2028",
                    "The",
                    "input",
                    "will",
                    "consist",
                    "of",
                    "the",
                    "day",
                    "of",
                    "the",
                    "week,",
                    "the",
                    "time",
                    "the",
                    "call",
                    "started,",
                    "and",
                    "the",
                    "length",
                    "of",
                    "the",
                    "call",
                    "in",
                    "minutes.",
                    "The",
                    "output",
                    "will",
                    "be",
                    "the",
                    "cost",
                    "of",
                    "the",
                    "call.",
                    "Notes:",
                    "1. The",
                    "time",
                    "is",
                    "to",
                    "be",
                    "input",
                    "in",
                    "24-hour",
                    "notation,",
                    "so",
                    "the",
                    "time",
                    "1:30",
                    "P.M.",
                    "is",
                    "input",
                    "as",
                    "\u202813:30",
                    "\u2028",
                    "2. The",
                    "day",
                    "of",
                    "the",
                    "week",
                    "will",
                    "be",
                    "read",
                    "as",
                    "one",
                    "of",
                    "the",
                    "following",
                    "two",
                    "character",
                    "string:",
                    "Mo",
                    "Tu",
                    "We",
                    "Th",
                    "Fr",
                    "Sa",
                    "Su",
                    "3. The",
                    "number",
                    "of",
                    "minutes",
                    "will",
                    "be",
                    "input",
                    "as",
                    "a",
                    "positive",
                    "integer.",
                    " "
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question",
                    "7:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "3.1.1,",
                    "sections",
                    "a-g",
                    "b) Exercise",
                    "3.1.2,",
                    "sections",
                    "a-e",
                    "c) Exercise",
                    "3.1.5,",
                    "sections",
                    "b,",
                    "d",
                    "d) Exercise",
                    "3.2.1,",
                    "sections",
                    "a-k"
                ]
            },
            {
                "question_no": 8,
                "data": [
                    "Question",
                    "8:",
                    "Solve",
                    "Exercise",
                    "3.2.4,",
                    "section",
                    "b",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook."
                ]
            },
            {
                "question_no": 9,
                "data": [
                    "Question",
                    "9:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "3.3.1,",
                    "sections",
                    "c-e",
                    "b) Exercise",
                    "3.3.3,",
                    "sections",
                    "a,",
                    "b,",
                    "e,",
                    "f",
                    "c) Exercise",
                    "3.3.4,",
                    "sections",
                    "b,",
                    "d"
                ]
            },
            {
                "question_no": 10,
                "data": [
                    "Question",
                    "10:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "3.5.1,",
                    "sections",
                    "b,",
                    "c",
                    "b) Exercise",
                    "3.5.3,",
                    "sections",
                    "b,",
                    "c,",
                    "e",
                    "c) Exercise",
                    "3.5.6,",
                    "sections",
                    "d,",
                    "e",
                    "d) Exercise",
                    "3.5.7,",
                    "sections",
                    "c,",
                    "f,",
                    "g"
                ]
            },
            {
                "question_no": 11,
                "data": [
                    "Question",
                    "11:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "3.6.2,",
                    "sections",
                    "b,",
                    "c",
                    "b) Exercise",
                    "3.6.3,",
                    "sections",
                    "b,",
                    "d",
                    "c) Exercise",
                    "3.6.4,",
                    "sections",
                    "b,",
                    "c"
                ]
            }
        ]
    },
    {
        "homework_no": 4,
        "file_name": "hw4.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "Write",
                    "two",
                    "versions",
                    "of",
                    "a",
                    "program",
                    "that",
                    "reads",
                    "a",
                    "positive",
                    "integer",
                    "n,",
                    "and",
                    "prints",
                    "the",
                    "first",
                    "n",
                    "even",
                    "numbers.",
                    "a) In",
                    "the",
                    "first,",
                    "use",
                    "a",
                    "while",
                    "loop.",
                    "b) In",
                    "the",
                    "second,",
                    "use",
                    "a",
                    "for",
                    "loop.",
                    " Each",
                    "section",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "a",
                    "positive",
                    "integer:",
                    "3",
                    "2",
                    "4",
                    "6",
                    "   "
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question 2: In this question we will use a simplified version of the Roman Numerals System to represent positive integers.  The digits in this system are I, V, X, L, C, D and M. Each digit corresponds to a decimal value, as showed in the following table:  Roman digit I V X L C D M Decimal value 1 5 10 50 100 500 1000  A number in the simplified Roman numerals system is a sequence of Roman digits, which follow these 2 rules: 1. The digits form a monotonically non-increasing sequence. That is the value of each digit is less than or equal to the value of the digit that came before it.  For example, DLXXVI is a monotonically non-increasing sequence of Roman digits, but XIV is not. 2. There is no limit on the number of times that \u2018M\u2019 can appear in the number. \u2018D\u2019, \u2018L\u2019 and \u2018V\u2019 can each appear at most one time in the number. \u2018C\u2019, \u2018X\u2019 and \u2018I\u2019 can each appear at most four times in the number. For example: IIII, XVII and MMMMMMDCCLXXXXVII are legal numbers in our simplified Roman numeral system, but IIIII, XIV, VVI and CCXLIII are not. Write a program that reads from the user a (decimal) number, and prints it\u2019s representation in the simplified Roman numerals system. ",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Enter decimal number:  147 147 is CXXXXVII ",
                    "  "
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question 3: Write a program that reads from the user a positive integer (in a decimal representation), and prints its binary (base 2) representation. ",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Enter decimal number:  76",
                    "The",
                    "binary",
                    "representation",
                    "of",
                    "76",
                    "is",
                    "1001100",
                    "   "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question 4: Write two versions of a program that reads a sequence of positive integers from the user, calculates their geometric mean, and print the geometric mean.  Notes:  1. In mathematics, geometric mean of a dataset {\ud835\udc4e!, \ud835\udc4e\", \ud835\udc4e#\u2026 , \ud835\udc4e$} containing positive numbers, is given by:  &\ud835\udc4e! \u2219 \ud835\udc4e\" \u2219 \ud835\udc4e# \u2219\u2219\u2219 \ud835\udc4e$! .  For example, the geometric mean of 2, 9 and 12 is equal to 6 (\u221a2 \u2219 9 \u2219 12\" = 6). 2. In",
                    "order",
                    "to",
                    "calculate",
                    "the",
                    "n-th",
                    "root",
                    "of",
                    "a",
                    "number,",
                    "you",
                    "should",
                    "call",
                    "the",
                    "pow",
                    "function,",
                    "located",
                    "in",
                    "the",
                    "cmath",
                    "library.",
                    "  Your two versions should read the integer sequence in two ways:       a) First read the length of the sequence. For example, an execution would look like: Please enter the length of the sequence: 3 Please enter your sequence:  1 2 3 The geometric mean is: 1.8171  b) Keep reading the numbers until -1 is entered. For example, an execution would look like: Please enter a non-empty sequence of positive integers, each one in a separate line. End your sequence by typing -1: 1 2 3 -1 The geometric mean is: 1.8171   ",
                    " "
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question",
                    "5:",
                    "Write a program that asks the user to input a positive integer n, and prints a textual image of an hourglass made of 2n lines with asterisks.  For example if n=4, the program should print: *******  *****   ***    *    *   ***  ***** ******* "
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question",
                    "6: Write",
                    "a",
                    "program",
                    "that",
                    "asks",
                    "the",
                    "user",
                    "to",
                    "input",
                    "a",
                    "positive",
                    "integer",
                    "n,",
                    "and",
                    "print",
                    "all",
                    "of",
                    "the",
                    "numbers",
                    "from",
                    "1",
                    "to",
                    "n",
                    "that",
                    "have",
                    "more",
                    "even",
                    "digits",
                    "than",
                    "odd",
                    "digits.",
                    "For",
                    "example,",
                    "if",
                    "n=30,",
                    "the",
                    "program",
                    "should",
                    "print:",
                    "2 4 6 8 20 22 24 26 28    "
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question 7: Write a program that reads a positive integer n from the user and prints out a nxn multiplication table. The columns should be spaced by a tab.   Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "a",
                    "positive",
                    "integer:",
                    "10",
                    "1",
                    " 2",
                    " 3",
                    " 4",
                    " 5",
                    " 6",
                    " 7",
                    " 8",
                    " 9",
                    " 10",
                    " ",
                    "2",
                    " 4",
                    " 6",
                    " 8",
                    " 10",
                    " 12",
                    " 14",
                    " 16",
                    " 18",
                    " 20",
                    " ",
                    "3",
                    " 6",
                    " 9",
                    " 12",
                    " 15",
                    " 18",
                    " 21",
                    " 24",
                    " 27",
                    " 30",
                    " ",
                    "4",
                    " 8",
                    " 12",
                    " 16",
                    " 20",
                    " 24",
                    " 28",
                    " 32",
                    " 36",
                    " 40",
                    " ",
                    "5",
                    " 10",
                    " 15",
                    " 20",
                    " 25",
                    " 30",
                    " 35",
                    " 40",
                    " 45",
                    " 50",
                    " ",
                    "6",
                    " 12",
                    " 18",
                    " 24",
                    " 30",
                    " 36",
                    " 42",
                    " 48",
                    " 54",
                    " 60",
                    " ",
                    "7",
                    " 14",
                    " 21",
                    " 28",
                    " 35",
                    " 42",
                    " 49",
                    " 56",
                    " 63",
                    " 70",
                    " ",
                    "8",
                    " 16",
                    " 24",
                    " 32",
                    " 40",
                    " 48",
                    " 56",
                    " 64",
                    " 72",
                    " 80",
                    " ",
                    "9",
                    " 18",
                    " 27",
                    " 36",
                    " 45",
                    " 54",
                    " 63",
                    " 72",
                    " 81",
                    " 90",
                    " ",
                    "10",
                    " 20",
                    " 30",
                    " 40",
                    " 50",
                    " 60",
                    " 70",
                    " 80",
                    " 90",
                    " 100"
                ]
            },
            {
                "question_no": 8,
                "data": [
                    "Question",
                    "8:",
                    "Implement",
                    "a",
                    "number",
                    "guessing",
                    "game.",
                    "The",
                    "program",
                    "should",
                    "randomly",
                    "choose",
                    "an",
                    "integer",
                    "between",
                    "1",
                    "and",
                    "100",
                    "(inclusive),",
                    "and",
                    "have",
                    "the",
                    "user",
                    "try",
                    "to",
                    "guess",
                    "that",
                    "number.",
                    "Implementations",
                    "guidelines:",
                    "1. The",
                    "user",
                    "can",
                    "guess",
                    "at",
                    "most",
                    "5",
                    "times.",
                    "2. Before",
                    "each",
                    "guess",
                    "the",
                    "program",
                    "announces:",
                    "\u2022 An",
                    "updated",
                    "guessing-range,",
                    "taking",
                    "in",
                    "to",
                    "account",
                    "previous",
                    "guesses",
                    "and",
                    "responses.",
                    "\u2022 The",
                    "number",
                    "of",
                    "guesses",
                    "that",
                    "the",
                    "user",
                    "has",
                    "left.",
                    "3. If",
                    "the",
                    "user",
                    "guessed",
                    "correctly,",
                    "the",
                    "program",
                    "should",
                    "announce",
                    "that,",
                    "and",
                    "also",
                    "tell",
                    "how",
                    "many",
                    "guesses",
                    "the",
                    "user",
                    "used.",
                    "4. If",
                    "the",
                    "user",
                    "guessed",
                    "wrong,",
                    "and",
                    "there",
                    "are",
                    "still",
                    "guesses",
                    "left,",
                    "the",
                    "program",
                    "should",
                    "tell",
                    "the",
                    "user",
                    "if",
                    "the",
                    "number",
                    "(it",
                    "chose)",
                    "is",
                    "bigger",
                    "or",
                    "smaller",
                    "than",
                    "the",
                    "number",
                    "that",
                    "the",
                    "user",
                    "guessed.",
                    "5. If",
                    "the",
                    "user",
                    "didn\u2019t",
                    "guess",
                    "the",
                    "number",
                    "in",
                    "all",
                    "of",
                    "the",
                    "5",
                    "tries,",
                    "the",
                    "program",
                    "should",
                    "reveal",
                    "the",
                    "number",
                    "it",
                    "chose.",
                    "6. Follow",
                    "the",
                    "execution",
                    "examples",
                    "below",
                    "for",
                    "the",
                    "exact",
                    "format.",
                    "In",
                    "order",
                    "to",
                    "generate",
                    "random",
                    "numbers",
                    "(of",
                    "type",
                    "int),",
                    "you",
                    "should",
                    "first",
                    "call",
                    "the",
                    "srand",
                    "function",
                    "(one",
                    "time)",
                    "to",
                    "initialize",
                    "a",
                    "seed",
                    "for",
                    "the",
                    "random",
                    "number",
                    "generator.",
                    "Then,",
                    "you",
                    "can",
                    "call",
                    "the",
                    "rand",
                    "function",
                    "repeatedly",
                    "to",
                    "generate",
                    "random",
                    "integers.",
                    "Follow",
                    "the",
                    "syntax",
                    "as",
                    "demonstrated",
                    "in",
                    "the",
                    "code",
                    "below:",
                    "1.  #include <iostream> 2.  #include <cstdlib> 3.  #include <ctime> 4.  using namespace std; 5. 6.  int main() { 7.      int x1, x2, x3, x4; 8.     9.      srand(time(0)); 10. 11.     x1 = rand(); 12.     x2 = rand(); 13.     x3 = rand() % 100; 14.     x4 = (rand() % 100) + 1; 15.     16.     cout<<x1<<\" \"<<x2<<\" \"<<x3<<\" \"<<x4<<endl; 17.     18.     return 0; 19. } ",
                    "Note",
                    "that",
                    "we",
                    "first",
                    "included",
                    "the",
                    "cstdlib",
                    "and",
                    "ctime",
                    "libraries",
                    "(lines",
                    "2",
                    "and",
                    "3).",
                    "In",
                    "line",
                    "9",
                    "we",
                    "called",
                    "srand(time(0))",
                    "to",
                    "create",
                    "the",
                    "seed",
                    "for",
                    "the",
                    "random",
                    "number",
                    "generator.",
                    "Then,",
                    "in",
                    "lines",
                    "11-14,",
                    "we",
                    "created",
                    "4",
                    "random",
                    "numbers:",
                    "The",
                    "first",
                    "two",
                    "were",
                    "taken",
                    "from",
                    "the",
                    "entire",
                    "positive",
                    "range",
                    "of",
                    "int",
                    "variables.",
                    "For",
                    "x3 and",
                    "x4",
                    "we",
                    "used",
                    "arithmetic",
                    "manipulation",
                    "to",
                    "change",
                    "the",
                    "range.",
                    "x3",
                    "would",
                    "be",
                    "in",
                    "the",
                    "range",
                    "0-99",
                    "(since",
                    "these",
                    "are",
                    "the",
                    "possible",
                    "remainders",
                    "when",
                    "dividing",
                    "a",
                    "number",
                    "by",
                    "100),",
                    "and",
                    "x4",
                    "would",
                    "be",
                    "in",
                    "the",
                    "range",
                    "of",
                    "1-100",
                    "(shifting",
                    "the",
                    "range",
                    "0-99",
                    "by",
                    "1).",
                    "Further",
                    "reading",
                    "regarding",
                    "random",
                    "number",
                    "generation",
                    "can",
                    "be",
                    "found",
                    "in",
                    "the",
                    "textbook",
                    "on",
                    "pages",
                    "188-189.",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "two",
                    "examples:",
                    "Execution",
                    "example",
                    "1:",
                    "I",
                    "thought",
                    "of",
                    "a",
                    "number",
                    "between",
                    "1",
                    "and",
                    "100!",
                    "Try",
                    "to",
                    "guess",
                    "it.",
                    "Range:",
                    "[1,",
                    "100],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "5",
                    "Your",
                    "guess:",
                    "15",
                    "Wrong!",
                    "My",
                    "number",
                    "is",
                    "bigger.",
                    "Range:",
                    "[16,",
                    "100],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "4",
                    "Your",
                    "guess:",
                    "34",
                    "Wrong!",
                    "My",
                    "number",
                    "is",
                    "smaller.",
                    "Range:",
                    "[16,",
                    "33],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "3",
                    "Your",
                    "guess:",
                    "23",
                    "Congrats!",
                    "You",
                    "guessed",
                    "my",
                    "number",
                    "in",
                    "3",
                    "guesses.",
                    "Execution",
                    "example",
                    "2:",
                    "I",
                    "thought",
                    "of",
                    "a",
                    "number",
                    "between",
                    "1",
                    "and",
                    "100!",
                    "Try",
                    "to",
                    "guess",
                    "it.",
                    "Range:",
                    "[1,",
                    "100],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "5",
                    "Your",
                    "guess:",
                    "15",
                    "Wrong!",
                    "My",
                    "number",
                    "is",
                    "bigger.",
                    "Range:",
                    "[16,",
                    "100],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "4",
                    "Your",
                    "guess:",
                    "50",
                    "Wrong!",
                    "My",
                    "number",
                    "is",
                    "smaller.",
                    "Range:",
                    "[16,",
                    "49],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "3",
                    "Your",
                    "guess:",
                    "3",
                    "Wrong!",
                    "My",
                    "number",
                    "is",
                    "bigger.",
                    "Range:",
                    "[16,",
                    "49],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "2",
                    "Your",
                    "guess:",
                    "34",
                    "Wrong!",
                    "My",
                    "number",
                    "is",
                    "smaller.",
                    "Range:",
                    "[16,",
                    "33],",
                    "Number",
                    "of",
                    "guesses",
                    "left:",
                    "1",
                    "Your",
                    "guess:",
                    "20",
                    "Out",
                    "of",
                    "guesses!",
                    "My",
                    "number",
                    "is",
                    "25",
                    " "
                ]
            },
            {
                "question_no": 9,
                "data": [
                    "Question",
                    "9:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "4.1.3,",
                    "sections",
                    "b,",
                    "c",
                    "b) Exercise",
                    "4.1.5,",
                    "sections",
                    "b,",
                    "d,",
                    "h,",
                    "i,",
                    "l",
                    " "
                ]
            },
            {
                "question_no": 10,
                "data": [
                    "Question",
                    "10:",
                    "I. Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a. Exercise",
                    "4.2.2,",
                    "sections",
                    "c,",
                    "g,",
                    "k",
                    "b. Exercise",
                    "4.2.4,",
                    "sections",
                    "b,",
                    "c,",
                    "d,",
                    "g",
                    "II. Give",
                    "an",
                    "example",
                    "of",
                    "a",
                    "function",
                    "from",
                    "the",
                    "set",
                    "of",
                    "integers",
                    "to",
                    "the",
                    "set",
                    "of",
                    "positive",
                    "integers",
                    "that",
                    "is\u2028:",
                    "a. one-to-one,",
                    "but",
                    "not",
                    "onto.",
                    "b. onto,",
                    "but",
                    "not",
                    "one-to-one.",
                    "c. one-to-one",
                    "and",
                    "onto.",
                    "d. neither",
                    "one-to-one",
                    "nor",
                    "onto\u2028"
                ]
            },
            {
                "question_no": 11,
                "data": [
                    "Question",
                    "11:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "4.3.2,",
                    "sections",
                    "c,",
                    "d,",
                    "g,",
                    "i",
                    "b) Exercise",
                    "4.4.8,",
                    "sections",
                    "c,",
                    "d",
                    "c) Exercise",
                    "4.4.2,",
                    "sections",
                    "b-d",
                    "d) Exercise",
                    "4.4.6,",
                    "sections",
                    "c-e",
                    "e) Extra",
                    "Credit:",
                    "Exercise",
                    "4.4.4,",
                    "sections",
                    "c,",
                    "d",
                    " "
                ]
            }
        ]
    },
    {
        "homework_no": 5,
        "file_name": "hw5.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "The",
                    "Fibonacci",
                    "numbers",
                    "sequence,",
                    "Fn,",
                    "is",
                    "defined",
                    "as",
                    "follows:",
                    "F1",
                    "is",
                    "1,",
                    "F2",
                    "is",
                    "1,",
                    "and",
                    "Fn",
                    "=",
                    "Fn-1",
                    "+",
                    "Fn-2",
                    "\u2028for",
                    "n",
                    "=",
                    "3,",
                    "4,",
                    "5,",
                    "...",
                    "In",
                    "other",
                    "words,",
                    "each",
                    "number",
                    "is",
                    "the",
                    "sum",
                    "of",
                    "the",
                    "previous",
                    "two",
                    "numbers.",
                    "The",
                    "first",
                    "10",
                    "numbers",
                    "in",
                    "Fibonacci",
                    "sequence",
                    "are:",
                    "1,",
                    "1,",
                    "2,",
                    "3,",
                    "5,",
                    "8,",
                    "13,",
                    "21,",
                    "34,",
                    "55",
                    "Note: Background of Fibonacci sequence: https://en.wikipedia.org/wiki/Fibonacci_number 1. Write a function int fib(int n) that returns the n-th element of the Fibonacci sequence. 2. Write a program that prompts the user to enter a positive integer num, and then prints the num\u2019s elements in the Fibonacci sequence.  ",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "exactly",
                    "as",
                    "it",
                    "shows",
                    "in",
                    "the",
                    "following",
                    "example:",
                    "Please",
                    "enter",
                    "a",
                    "positive",
                    "integer:",
                    "7",
                    "13"
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question 2:",
                    "Write",
                    "a",
                    "program",
                    "that,",
                    "prints",
                    "a",
                    "\u2018pine",
                    "tree\u2019",
                    "consisting",
                    "of",
                    "triangles",
                    "of",
                    "increasing",
                    "sizes,",
                    "filled",
                    "with",
                    "a",
                    "character",
                    "(eg.",
                    "\u2018*\u2019",
                    "or",
                    "\u2019+\u2019",
                    "or",
                    "\u2018$\u2019",
                    "etc).",
                    "Your",
                    "program",
                    "should",
                    "interact",
                    "with",
                    "the",
                    "user",
                    "to",
                    "read",
                    "the",
                    "number",
                    "of",
                    "triangles",
                    "in",
                    "the",
                    "tree",
                    "and",
                    "the",
                    "character",
                    "filling",
                    "the",
                    "tree.",
                    "Your",
                    "implementation",
                    "should",
                    "include",
                    "the",
                    "following",
                    "functions:",
                    "a. void printShiftedTriangle(int n, int m, char symbol)",
                    "It",
                    "prints",
                    "an",
                    "n-line",
                    "triangle,",
                    "filled",
                    "with",
                    "symbol",
                    "characters,",
                    "shifted",
                    "m",
                    "spaces",
                    "from",
                    "the",
                    "left",
                    "margin.",
                    "For",
                    "example,",
                    "if",
                    "we",
                    "call",
                    "printShiftedTriangle(3, 4, `+`),",
                    "the",
                    "expected",
                    "output",
                    "is:",
                    "       +          +++         +++++",
                    "b. void printPineTree(int n, char symbol)",
                    "It",
                    "prints",
                    "a",
                    "sequence",
                    "of",
                    "n",
                    "triangles",
                    "of",
                    "increasing",
                    "sizes",
                    "(the",
                    "smallest",
                    "triangle",
                    "is",
                    "a",
                    "2-line",
                    "triangle),",
                    "which",
                    "form",
                    "the",
                    "shape",
                    "of",
                    "a",
                    "pine",
                    "tree.",
                    "The",
                    "triangles",
                    "are",
                    "filled",
                    "with",
                    "the",
                    "symbol",
                    "character.",
                    "For",
                    "example,",
                    "if",
                    "we",
                    "call",
                    "printPineTree(3, `#`),",
                    "the",
                    "expected",
                    "output",
                    "is:",
                    "   #   ###    #   ###  #####    #   ###  ##### ####### ",
                    "  Left",
                    "margin",
                    "4",
                    "spaces",
                    "Left",
                    "margin"
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question 3: a. Implement",
                    "a",
                    "function:",
                    "int printMonthCalender(int numOfDays, int startingDay)",
                    "This",
                    "function",
                    "is",
                    "given",
                    "two",
                    "parameters:",
                    "\u2022 numOfDays",
                    "-",
                    "The",
                    "number",
                    "of",
                    "days",
                    "in",
                    "the",
                    "month",
                    "\u2022 startingDay",
                    "\u2013",
                    "a",
                    "number",
                    "1-7",
                    "that",
                    "represents",
                    "the",
                    "day",
                    "in",
                    "the",
                    "week",
                    "of",
                    "the",
                    "first",
                    "day",
                    "in",
                    "that",
                    "month",
                    "(1",
                    "for",
                    "Monday,",
                    "2",
                    "for",
                    "Tuesday,",
                    "3",
                    "for",
                    "Wednesday,",
                    "etc.).",
                    "The",
                    "function",
                    "should:",
                    "\u2022 Print",
                    "a",
                    "formatted",
                    "monthly",
                    "calendar",
                    "of",
                    "that",
                    "month",
                    "\u2022 Return",
                    "a",
                    "number",
                    "1-7",
                    "that",
                    "represents",
                    "the",
                    "day",
                    "in",
                    "the",
                    "week",
                    "of",
                    "the",
                    "last",
                    "day",
                    "in",
                    "that",
                    "month.",
                    "Formatting",
                    "Notes:",
                    "\u2022 The",
                    "output",
                    "should",
                    "include",
                    "a",
                    "header",
                    "line",
                    "with",
                    "the",
                    "days\u2019",
                    "names.",
                    "\u2022 Columns",
                    "should",
                    "be",
                    "spaced",
                    "by",
                    "a",
                    "Tab.",
                    "Example:",
                    "when",
                    "calling",
                    "printMonthCalender(31, 4)it",
                    "should",
                    "return",
                    "6,",
                    "and",
                    "should",
                    "print:",
                    "  Mon Tue Wed Thr Fri Sat Sun      1 2 3 4   5 6 7 8 9 10 11   12 13 14 15 16 17 18   19 20 21 22 23 24 25   26 27 28 29 30 31  b. A",
                    "method",
                    "for",
                    "determining",
                    "if",
                    "a",
                    "year",
                    "is",
                    "a",
                    "leap",
                    "year",
                    "in",
                    "the",
                    "Gregorian",
                    "calendar",
                    "system",
                    "is",
                    "to",
                    "check",
                    "if",
                    "it",
                    "is",
                    "divisible",
                    "by",
                    "4",
                    "but",
                    "not",
                    "by",
                    "100,",
                    "unless",
                    "it",
                    "is",
                    "also",
                    "divisible",
                    "by",
                    "400.",
                    "For",
                    "example,",
                    "1896,",
                    "1904,",
                    "and",
                    "2000",
                    "were",
                    "leap",
                    "years",
                    "but",
                    "1900",
                    "was",
                    "not.",
                    "Write",
                    "a",
                    "function",
                    "that",
                    "takes",
                    "in",
                    "a",
                    "year",
                    "as",
                    "input",
                    "and",
                    "return",
                    "true",
                    "if",
                    "the",
                    "year",
                    "is",
                    "a",
                    "leap",
                    "year,",
                    "return",
                    "false",
                    "otherwise.",
                    "Note:",
                    "background",
                    "on",
                    "leap",
                    "year",
                    "https://en.wikipedia.org/wiki/Leap_year",
                    "c. Implement",
                    "a",
                    "function:",
                    "void printYearCalender(int year, int startingDay)",
                    "This",
                    "function",
                    "is",
                    "given",
                    "two",
                    "parameters:",
                    "\u2022 year",
                    "\u2013",
                    "an",
                    "integer",
                    "that",
                    "represents",
                    "a",
                    "year",
                    "(e.g.",
                    "2016)",
                    "\u2022 startingDay",
                    "\u2013",
                    "a",
                    "number",
                    "1-7",
                    "that",
                    "represents",
                    "the",
                    "day",
                    "in",
                    "the",
                    "week",
                    "of",
                    "1/1",
                    "in",
                    "that",
                    "year",
                    "(1",
                    "for",
                    "Monday,",
                    "2",
                    "for",
                    "Tuesday,",
                    "3",
                    "for",
                    "Wednesday,",
                    "etc.).",
                    "The",
                    "function",
                    "should",
                    "use",
                    "the",
                    "functions",
                    "from",
                    "sections",
                    "(a)",
                    "and",
                    "(b)",
                    "in",
                    "order",
                    "to",
                    "print",
                    "a",
                    "formatted",
                    "yearly",
                    "calendar",
                    "of",
                    "that",
                    "year.",
                    "Formatting",
                    "Note:",
                    "As",
                    "the",
                    "header",
                    "for",
                    "each",
                    "month",
                    "you",
                    "should",
                    "print",
                    "the",
                    "months\u2019",
                    "name",
                    "followed",
                    "by",
                    "the",
                    "year",
                    "(e.g.",
                    "March",
                    "2016).",
                    "Example:",
                    "Appendix",
                    "A",
                    "shows",
                    "the",
                    "expected",
                    "output",
                    "of",
                    "the",
                    "call",
                    "printYearCalender(2016, 5).",
                    "d. Write",
                    "program",
                    "that",
                    "interacts",
                    "with",
                    "the",
                    "user",
                    "and",
                    "your",
                    "function",
                    "in",
                    "(c).",
                    "   "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question 4: a. Implement a function: void printDivisors(int num) This function is given a positive integer num, and prints all of num\u2019s divisors in an ascending order, separated by a space. For Example, if we call printDivisors(100), the expected output is: 1  2  4  5  10  20  25  50  100  Implementation requirement: Pay attention to the running time of your function. An efficient implementation would run in \u0398\"\u221a\ud835\udc5b\ud835\udc62\ud835\udc5a'.  b. Use the function above when implementing a program that reads from the user a positive integer (\u22652), and prints all it\u2019s divisors. Your program should interact with the user exactly as it shows in the following example: Please enter a positive integer >= 2: 100 1  2  4  5  10  20  25  50  100     "
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question 5: Consider the following definitions: a. A proper divisors of a positive integer (\u2265 2) is any of its divisors excluding the number itself. For example, the proper divisors of 10 are: 1, 2 and 5. b. A perfect number is a positive",
                    "integer (\u2265 2) that is equal to the sum of its proper divisors. For example, 6 and 28 are perfect numbers, since: 6 = 1 + 2 + 3 28 = 1 + 2 + 4 + 7 + 14 Background of perfect numbers: https://en.wikipedia.org/wiki/Perfect_number c. Amicable numbers are two different positive integer (\u2265 2), so related that the sum of the proper divisors of each is equal to the other number. For example, 220 and 284 are amicable numbers, since: 284 = 1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110  220 = 1 + 2 + 4 + 71 + 142   Background of amicable numbers: https://en.wikipedia.org/wiki/Amicable_numbers   a. Write a function: void analyzeDividors(int num, int& outCountDivs, int& outSumDivs)",
                    "The function takes as an input a positive integer num (\u2265 2), and updates two output parameters with the number of num's proper divisors and their sum.  For example, if this function is called with num=12, since 1, 2, 3, 4 and 6 are 12s proper divisors, the function would update the output parameters with the numbers 5 and 16. Note: Pay attention to the running time of your function. An efficient implementation would run in \u0398\"\u221a\ud835\udc5b\ud835\udc62\ud835\udc5a'.  b. Use the function you wrote in section (a), to implement the function: bool isPerfect(int num) This functions is given positive integer num (\u2265 2), and determines if it is perfect number or not.  c. Use the functions you implemented in sections (a) and (b), to write a program that reads from the user a positive integer M (\u2265 2), and prints: \u2022 All the perfect numbers between 2 and M. \u2022 All pairs of amicable numbers that are between 2 and M (both numbers must be in the range).  Note: Pay attention to the running time of your implementation. An efficient algorithm for this part would call analyzeDividors \u0398(\ud835\udc40) times all together.      (proper",
                    "divisors",
                    "of",
                    "220)",
                    "(proper",
                    "divisors",
                    "of",
                    "284)"
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question 6: The number e is an important mathematical constant that is the base of the natural logarithm. e also arises in the study of compound interest, and in many other applications.  Background of e: https://en.wikipedia.org/wiki/E_(mathematical_constant)  e can be calculated as the sum of the infinite series: \ud835\udc52 = 1 +",
                    " !!!+",
                    " !#!+",
                    " !$!+",
                    " !%!+\u22ef   The value of e is approximately equal to 2.71828. We can get an approximate value of e, by calculating only a partial sum of the infinite sum above (the more addends we add, the better approximation we get).  Implement the function: double eApprox(int n) This function is given a positive integer n, and returns an approximation of e, calculated by the sum of the first (n+1) addends of the infinite sum above.  To test your function use the following main: int main() {     cout.precision(30);      for (int n = 1; n <= 15; n++) {         cout<<\"n = \"<<n<<'\\t'<<eApprox(n)<<endl;     }      return 0; }   Notes: 1. Pay attention to the running time of eApprox. An efficient implementation would run in \u0398(\ud835\udc5b). 2. Since the values of the factorials will grow to be very large, use a variable of type double to store them. ",
                    "  "
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question 7: a. Solve",
                    "Exercise",
                    "8.2.2,",
                    "section",
                    "b",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook.",
                    "b. Use the definition of \u0398 to show that \u221a7n! + 2n \u2212 8 = ",
                    "\u0398(\ud835\udc5b) c. Solve",
                    "Exercise",
                    "8.3.5,",
                    "sections",
                    "a-e",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook",
                    "  "
                ]
            },
            {
                "question_no": 8,
                "data": [
                    "Question 8: Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "5.1.1,",
                    "sections",
                    "b,",
                    "c",
                    "b) Exercise",
                    "5.3.2,",
                    "section",
                    "a",
                    "c) Exercise",
                    "5.3.3,",
                    "sections",
                    "b,",
                    "c",
                    "d) Exercise",
                    "5.2.3,",
                    "sections",
                    "a,",
                    "b"
                ]
            },
            {
                "question_no": 9,
                "data": [
                    "Question 9:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "5.4.2,",
                    "sections",
                    "a,",
                    "b",
                    "b) Exercise",
                    "5.5.3,",
                    "sections",
                    "a-g",
                    "c) Exercise",
                    "5.5.5,",
                    "section",
                    "a",
                    "d) Exercise",
                    "5.5.8,",
                    "sections",
                    "c-f",
                    "e) Exercise",
                    "5.6.6,",
                    "sections",
                    "a,",
                    "b"
                ]
            },
            {
                "question_no": 10,
                "data": [
                    "Question 10:",
                    "Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "5.7.2,",
                    "sections",
                    "a,",
                    "b",
                    "b) Exercise",
                    "5.8.4,",
                    "sections",
                    "a,",
                    "b"
                ]
            },
            {
                "question_no": 11,
                "data": [
                    "Question 11: How many one-to-one functions are there from a set with five elements to sets with the following number of elements?\u2028\u2028 a) 4  b) 5  c) 6  d) 7    ",
                    "Appendix A. The expected output of the call printYearCalender(2016, 5) is:    January 2016   Mon Tue Wed Thr Fri Sat Sun       1 2 3  4 5 6 7 8 9 10  11 12 13 14 15 16 17  18 19 20 21 22 23 24  25 26 27 28 29 30 31    February 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4 5 6 7  8 9 10 11 12 13 14  15 16 17 18 19 20 21  22 23 24 25 26 27 28  29     March 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4 5 6  7 8 9 10 11 12 13  14 15 16 17 18 19 20  21 22 23 24 25 26 27  28 29 30 31     April 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3  4 5 6 7 8 9 10  11 12 13 14 15 16 17  18 19 20 21 22 23 24  25 26 27 28 29 30     May 2016   Mon Tue Wed Thr Fri Sat Sun     1  2 3 4 5 6 7 8  9 10 11 12 13 14 15  16 17 18 19 20 21 22  23 24 25 26 27 28 29  30 31   ",
                    "    June 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4 5  6 7 8 9 10 11 12  13 14 15 16 17 18 19  20 21 22 23 24 25 26  27 28 29 30    July 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3  4 5 6 7 8 9 10  11 12 13 14 15 16 17  18 19 20 21 22 23 24  25 26 27 28 29 30 31     August 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4 5 6 7  8 9 10 11 12 13 14  15 16 17 18 19 20 21  22 23 24 25 26 27 28  29 30 31     September 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4  5 6 7 8 9 10 11  12 13 14 15 16 17 18  19 20 21 22 23 24 25  26 27 28 29 30     October 2016   Mon Tue Wed Thr Fri Sat Sun     1 2  3 4 5 6 7 8 9  10 11 12 13 14 15 16  17 18 19 20 21 22 23  24 25 26 27 28 29 30  31      ",
                    "  November 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4 5 6  7 8 9 10 11 12 13  14 15 16 17 18 19 20  21 22 23 24 25 26 27  28 29 30     December 2016   Mon Tue Wed Thr Fri Sat Sun     1 2 3 4  5 6 7 8 9 10 11  12 13 14 15 16 17 18  19 20 21 22 23 24 25  26 27 28 29 30 31   "
                ]
            }
        ]
    },
    {
        "homework_no": 6,
        "file_name": "hw6.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "1. Implement the function: int minInArray(int arr[], int arrSize)  This function is given arr, an array of integers, and its logical size, arrSize. When called, it returns the minimum value in arr.  2. Write a program that reads from the user a sequence of 20 integers (unnecessarily different from one another) into an array, and outputs the minimum value, and all the indices it appears in the array.   Your program should interact with the user exactly as it shows in the following example: Please",
                    "enter",
                    "20",
                    "integers",
                    "separated",
                    "by",
                    "a",
                    "space:",
                    "14",
                    "5",
                    "12",
                    "5",
                    "6",
                    "14",
                    "5",
                    "12",
                    "14",
                    "12",
                    "14",
                    "6",
                    "8",
                    "7",
                    "5",
                    "136",
                    "9",
                    "2189",
                    "10",
                    "6",
                    "The",
                    "minimum",
                    "value",
                    "is",
                    "5,",
                    "and",
                    "it",
                    "is",
                    "located",
                    "in",
                    "the",
                    "following",
                    "indices:",
                    "1",
                    "3",
                    "6",
                    "14  Note: You may want to define additional functions for your program to use."
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question 2: A palindrome is a word, which reads the same backward or forward. For example, noon, civic, radar, level, rotor, kayak, reviver, racecar, redder, madam, and refer are all palindromes. a. Implement a function: bool isPalindrome(string str) This function is given a string str containing a word, and returns true if and only if str is a palindrome.  b. Write a program that reads a word from the user and announces to the user if it is a palindrome or not. Your program should interact with the user exactly as it shows in the following example: Please enter a word: level level is a palindrome   "
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question 3: Implement",
                    "following",
                    "functions:",
                    "a. void reverseArray(int arr[], int arrSize)",
                    "That takes arr, an array of integers, and its size, arrSize. When called, it reorders the elements of the array to appear in a reverse order. For example, if arr is an array containing [1, 2, 3, 4], after calling reverseArray, arr will look like: [4, 3, 2, 1]. ",
                    "b. ",
                    "void removeOdd(int arr[], int& arrSize)",
                    "That takes",
                    "arr, an array of integers, and its size, arrSize. When called, the function alters arr so that the only numbers in it at the end are the even ones, which should remain in their original relative order.  Additionally, the function updates arrSize so it contains the new logical size of the array after removing the odd numbers (note that arrSize is a parameter used both for input and output).  For example, if arr is an array containing [1, 2, 3, 4], after calling removeOdd, arr will look like: [2, 4], and the parameter arrSize will update to 2. Notice the values in arr[2] and arr[3] are discarded.  c. void splitParity(int arr[], int arrSize) That takes",
                    "arr, an array of integers, and its size, arrSize. When called, the function",
                    "changes the order of numbers in arr so that all the odd numbers will appear first, and all the even numbers will appear last. Note that the inner order of the odd numbers and the inner order of the even numbers don\u2019t matter. For example, if arr is an array containing [1, 2, 3, 4], after calling splitParity, arr could look like: [3, 1, 2, 4].    Implementation requirements: 1. In all three functions, you are not allowed to use an auxiliary array (a temporary local array).  2. Pay attention to the running time of your functions. For each one of the functions above, an efficient implementation would run in a linear time (that is \u0398(\ud835\udc4e\ud835\udc5f\ud835\udc5f\ud835\udc46\ud835\udc56\ud835\udc67\ud835\udc52)).  Note: You don\u2019t have to submit a main function for this question. You may use the following program to test your functions: #include <iostream> using namespace std;  void printArray(int arr[], int arrSize);  int main() {     int arr1[10] = {9, 2, 14, 12, -3};     int arr1Size = 5;          int arr2[10] = {21, 12, 6, 7, 14};     int arr2Size = 5;          int arr3[10] = {3, 6, 4, 1, 12};     int arr3Size = 5;          reverseArray(arr1, arr1Size);     printArray(arr1, arr1Size);          removeOdd(arr2, arr2Size);     printArray(arr2, arr2Size);          splitParity(arr3, arr3Size);     printArray(arr3, arr3Size);          return 0; }  void printArray(int arr[], int arrSize){     int i;          for (i = 0; i < arrSize; i++) {         cout<<arr[i]<<' ';     }     cout<<endl; }  When running this program you should expect the following output (the output for splitParity could be different): -3   12   14   2   9 12   6   14 1   3   6   4   12  "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question 4: Traditional password entry schemes are susceptible to \"shoulder surfing\" in which an attacker watches an unsuspecting user enter their password or PIN number and uses it later to gain access to the account. One way to combat this problem is with a randomized challenge-response system. In these systems the user enters different information every time, based on a secret in response to a randomly generated challenge.  Consider the following scheme, in which the password consists of a five-digit PIN number (00000 to 99999). Each digit is assigned a random number that is 1, 2, or 3. The user enters the random numbers that correspond to their PIN instead of their actual PIN numbers.   For example, consider an actual PIN number of 12345. To authenticate the user would be presented with a screen such as:  PIN:  0 1 2 3 4 5 6 7 8 9  NUM:  3 2 3 1 1 3 2 2 1 3  The user would enter 23113 instead of 12345. This doesn\u2019t divulge the password even if an attacker intercepts the entry because 23113 could correspond to other PIN numbers, such as 69440 or 70439.  The next time the user logs in, a different sequence of random numbers would be generated, such as:  PIN:  0 1 2 3 4 5 6 7 8 9  NUM:  1 1 2 3 1 2 2 3 3 3   Write a program to simulate the authentication process. Store an actual 5-digit PIN number in your program (make one up, and store it as a constant). The program should use an array to assign random numbers to the digits from 0 to 9. Output the random digits to the screen, input the response from the user, and output whether or not the user\u2019s response correctly matches the PIN number.  Assuming that the actual PIN number is 12345, your program should interact with the user exactly as it shows in the following examples (2 different executions of the program): Please",
                    "enter",
                    "your",
                    "PIN",
                    "according",
                    "to",
                    "the",
                    "following",
                    "mapping:",
                    "PIN:",
                    " 0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "NUM:",
                    " 3",
                    "2",
                    "3",
                    "1",
                    "1",
                    "3",
                    "2",
                    "2",
                    "1",
                    "3",
                    "23113",
                    "Your",
                    "PIN",
                    "is",
                    "correct",
                    "Please",
                    "enter",
                    "your",
                    "PIN",
                    "according",
                    "to",
                    "the",
                    "following",
                    "mapping:",
                    "PIN:",
                    " 0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "NUM:",
                    " 1",
                    "1",
                    "2",
                    "3",
                    "1",
                    "2",
                    "2",
                    "3",
                    "3",
                    "3",
                    "23113",
                    "Your",
                    "PIN",
                    "is",
                    "not",
                    "correct",
                    "Note: Think how to break down your implementation to functions. "
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question 5: Write a program that reads a person\u2019s name in the following format:  first name, then middle name or initial, and then last name.  The program then outputs the name in the following format: \u2028 Last_Name,   First_Name   Middle_Initial.   For example, the input \u2028    Mary Average User should produce the output: \u2028 User, Mary A. \u2028  The input \u2028Mary A. User \u2028 should also produce the output: \u2028 User, Mary A. \u2028  Note that your program should work the same and place a period after the middle initial even if the input did not contain a period.   Hint: You may want to use three string variables rather than one large string variable for the input. You may find it easier to not use getline. \u2028   "
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question 6: Write a program that reads in a line of text and outputs the line with all the digits in all integer numbers replaced with 'x'. \u2028 Please enter a line of text:  My userID is john17 and my 4 digit pin is 1234 which is secret My userID is john17 and my x digit pin is xxxx which is secret  Notes: 1. If a digits is part of a word, then the digit is not changed to an 'x'. For example, john17 is NOT changed to johnxx.  2. You may assume that the text entered by the user will contain only letters (upper case or lower case), digits and spaces. 3. Think how to break down your implementation to functions.   "
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question 7: Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "6.1.5,",
                    "sections",
                    "b-d",
                    "b) Exercise",
                    "6.2.4,",
                    "sections",
                    "a-d",
                    "  "
                ]
            },
            {
                "question_no": 8,
                "data": [
                    "Question 8: Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "6.3.2,",
                    "sections",
                    "a-e",
                    "b) Exercise",
                    "6.3.6,",
                    "sections",
                    "b,",
                    "c",
                    "c) Exercise",
                    "6.4.2,",
                    "section",
                    "a",
                    "  "
                ]
            },
            {
                "question_no": 9,
                "data": [
                    "Question 9: Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "6.5.2,",
                    "sections",
                    "a,",
                    "b",
                    "b) Exercise",
                    "6.6.1,",
                    "section",
                    "a",
                    "c) Exercise",
                    "6.6.4,",
                    "sections",
                    "a,",
                    "b",
                    "d) Exercise",
                    "6.7.4,",
                    "section",
                    "a",
                    "  "
                ]
            },
            {
                "question_no": 10,
                "data": [
                    "Question 10: Solve",
                    "the",
                    "following",
                    "questions",
                    "from",
                    "the",
                    "Discrete",
                    "Math",
                    "zyBook:",
                    "a) Exercise",
                    "6.8.1,",
                    "sections",
                    "a-d",
                    "b) Exercise",
                    "6.8.3,",
                    "section",
                    "b",
                    "   \u2028   "
                ]
            }
        ]
    },
    {
        "homework_no": 7,
        "file_name": "hw7.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question 1: Write a program that will read in a line of text and output the number of words in the line and the number of occurrences of each letter.  Define a word to be any string of letters that is delimited at each end by either whitespace, a period, a comma, or the beginning or end of the line.  You can assume that the input consists entirely of letters, whitespace, commas, and periods. When outputting the number of letters that occur in a line, be sure to count upper and lowercase versions of a letter as the same letter.  Output the letters in alphabetical order and list only those letters that do occur in the input line.   Your program should interact with the user exactly as it shows in the following example: Please enter a line of text:  I say Hi. 3 words  1 a\u2028 1 h\u2028 2 i \u2028 1 s  1 y \u2028  Notes:  1. Think how to break down your implementation to functions. 2. Pay attention to the running time of your program. If the input line contains \ud835\udc5b characters, an efficient implementation would run in a linear time (that is \u0398(\ud835\udc5b)). "
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question 2: Two strings are anagrams if the letters can be rearranged to form each other. For example, \u201cEleven plus two\u201d is an anagram of \u201cTwelve plus one\u201d. Each string contains one \u2018v\u2019, three \u2018e\u2019s, two \u2018l\u2019s, etc.  Write a program that determines if two strings are anagrams. The program should not be case sensitive and should disregard any punctuation or spaces. \u2028 ",
                    "Notes:  1. Think how to break down your implementation to functions. 2. Pay attention to the running time of your program. If each input string contains \ud835\udc5b characters, an efficient implementation would run in a linear time (that is \u0398(\ud835\udc5b)). ",
                    "  "
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question 3: Implement the function:  void oddsKeepEvensFlip(int arr[], int arrSize)  This function gets an array of integers arr and its logical size arrSize.  When called, it should reorder the elements of arr so that: 1. All the odd numbers come before all the even numbers 2. The odd numbers will keep their original relative order 3. The even numbers will be placed in a reversed order (relative to their original order).  For example, if arr = [5, 2, 11, 7, 6, 4],  after calling oddsKeepEvensFlip(arr, 6), arr will be:  [5, 11, 7, 4, 6, 2]  Implementation requirements: 1. Your function should run in linear time. That is, if there are n items in arr, calling oddsKeepEvensFlip(arr, n) will run in \ud835\udf03(\ud835\udc5b). 2. Write a main() program that tests this function. 3. Note that at the end, the elements should be stored starting at the same base address, as was given in arr.    "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question 4: Implement the function:  string* createWordsArray(string sentence, int& outWordsArrSize)  This function gets a string sentence containing a sentence.  When called, it should create and return a new array (of strings), that contains all the words in sentence. The function should also update the output parameter, outWordsArrSize, with the logical size of the new array that was created.  Note: Assume that the words in the sentence are separated by a single space.  For example, if sentence=\u201dYou can do it\u201d, after calling  createWordsArray(sentence, outWordsArrSize), the function should create and return an array that contains [\u201dYou\u201d , \u201dcan\u201d , \u201ddo\u201d , \u201dit\u201d], and update the value in outWordsArrSize to be 4.  Implementation requirements: 1. You may want to use some of the string methods, such as find, substr, etc. 2. Your function should run in linear time. That is, if sentence contains n characters, your function should run in \ud835\udf03(\ud835\udc5b). 3. Write a main() program that tests this function.. "
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question 5: In this question, you will write four versions of a function getPosNums that gets an array of integers arr, and its logical size. When called it creates a new array containing only the positive numbers from arr. For example, if arr=[3, -1, -3, 0, 6, 4], the functions should create an array containing the following 3 elements: [3, 6, 4],  The four versions you should implement differ in the way the output is returned.  The prototypes of the functions are: a) int* getPosNums1(int* arr, int arrSize, int& outPosArrSize) returns the base address of the array (containing the positive numbers), and updates the output parameter outPosArrSize with the array\u2019s logical size.  b) void getPosNums2(int* arr, int arrSize,                   int*& outPosArr, int& outPosArrSize) updates the output parameter outPosArr with the base address of the array (containing the positive numbers), and the output parameter outPosArrSize with the array\u2019s logical size.  c) int* getPosNums3(int* arr, int arrSize, int* outPosArrSizePtr) returns the base address of the array (containing the positive numbers), and uses the pointer outPosArrSizePtr to update the array\u2019s logical size.  d) void getPosNums4(int* arr, int arrSize,                   int** outPosArrPtr, int* outPosArrSizePtr) uses the pointer outPosArrPtr to update the base address of the array (containing the positive numbers), and the pointer outPosArrSizePtr to update the array\u2019s logical size.  Note: You should also write a program that calls and tests all these functions.  ",
                    "  "
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question 6: In this question, you will write two versions of a program that reads from the user a sequence of positive integers ending with -1, and another positive integer num that the user wishes to search for.  The program should then print all the line numbers in sequence entered by the user, that contain num, or a message saying that num does not show at all in the sequence.  Your program should interact with the user exactly as it shows in the following example: Please enter a sequence of positive integers, each in a separate line. End you input by typing -1.  13 5 8 2 9 5 8 8 -1 Please enter a number you want to search: 5 5 shows in lines 2, 6. ",
                    "a) The first version of the program, is not allowed to use the vector data structure.",
                    "b) The second version of the program, should use the vector data structure.",
                    "Implementation requirements (for both programs): 1. Think how to break down your implementation to functions. 2. Your programs should run in linear time. That is, if there are n numbers in the input sequence, your program should run in \ud835\udf03(\ud835\udc5b). 3. Write the two programs in two functions named main1() and main2(). Also have the main() test these two functions. ",
                    "  "
                ]
            },
            {
                "question_no": 7,
                "data": [
                    "Question 7: Implement the function:  int* findMissing(int arr[], int n, int& resArrSize)  This function gets an array of integers arr and its logical size n. All elements in arr are in the range {0, 1, 2, \u2026 , n}.  Note that since the array contains n numbers taken from a range of size n+1, there must be at least one number that is missing (could be more than one number missing, if there are duplicate values in arr).   When called, it should create and return a new array, that contains all the numbers in range {0, 1, 2, \u2026 , n} that are not in arr. The function should also update the output parameter, resArrSize, with the logical size of the new array that was created.  For example, if arr=[3, 1, 3, 0, 6, 4], after calling  findMissing(arr, 6, resArrSize), the function should create and return an array that contains [2, 5], and update the value in resArrSize to be 2.  Implementation requirements: 1. Your function should run in linear time. That is, it should run in \ud835\udf03(\ud835\udc5b). 2. Write a main() program that tests this function.. "
                ]
            }
        ]
    },
    {
        "homework_no": 8,
        "file_name": "hw8.pdf",
        "contents": [
            {
                "question_no": 1,
                "data": [
                    "Question",
                    "1:",
                    "Give a recursive implement to the following functions:  a. void printTriangle(int n)  This function is given a positive integer n, and prints a textual image of a right triangle (aligned to the left) made of n lines with asterisks.  For example, printTriangle(4), should print: * ** *** ****  b. void printOpositeTriangles(int n)  This function is given a positive integer n, and prints a textual image of a two opposite right triangles (aligned to the left) with asterisks, each containing n lines.  For example, printOpositeTriangles(4), should print: **** *** ** * * ** *** ****   c. void printRuler(int n)  This function is given a positive integer n, and prints a vertical ruler of 2! \u2212 1 lines. Each line contains \u2018-\u2018 marks as follows: \u2022 The line in the middle (!\") of the ruler contains n \u2018-\u2018 marks \u2022 The lines at the middle of each half (!# and $#) of the ruler contains (n-1) \u2018-\u2018 marks \u2022 The lines at the !%, $%, &% and '% of the ruler contains (n-2) \u2018-\u2018 marks \u2022 And so on \u2026 \u2022 The lines at the !\"(, $\"(, &\"(, ..., \"()!\"( of the ruler contains 1 \u2018-\u2018 mark For example, printRuler(4), should print (only the blue marks):   -   1/16=   1/16 - -   2/16=        1/8 -   3/16=   3/16 - - -   4/16=              1/4 -   5/16=   5/16 - -   6/16=        3/8 -   7/16=   7/16 - - - -   8/16=                    1/2 -   9/16=   9/16 - -   10/16=          5/8 -   11/16=   11/16 - - -   12/16=              3/4 -   13/16=   13/16  - -   14/16=            7/8 -   15/16=   15/16   Hints:  1. Take",
                    "for",
                    "n=4:",
                    "when",
                    "finding",
                    "print_ruler(4),",
                    "try",
                    "to",
                    "think",
                    "first",
                    "what",
                    "print_ruler(3)",
                    "does,",
                    "and",
                    "how",
                    "you",
                    "can",
                    "use",
                    "it",
                    "to",
                    "print",
                    "a",
                    "ruler",
                    "of",
                    "size",
                    "4.",
                    "Then,",
                    "generally",
                    "identify",
                    "what print_ruler(n-1) is",
                    "supposed",
                    "to",
                    "print,",
                    "and",
                    "use",
                    "that",
                    "in",
                    "order",
                    "to",
                    "define",
                    "how",
                    "to",
                    "print",
                    "the",
                    "ruler",
                    "of",
                    "size",
                    "n.",
                    "2. You",
                    "may",
                    "want",
                    "to",
                    "have",
                    "more",
                    "than",
                    "one",
                    "recursive",
                    "call",
                    "3. It",
                    "looks",
                    "much",
                    "scarier",
                    "than",
                    "it",
                    "actually",
                    "is",
                    " "
                ]
            },
            {
                "question_no": 2,
                "data": [
                    "Question",
                    "2:",
                    "Give a recursive implement to the following functions:  a. int sumOfSquares(int arr[], int arrSize)  This function is given arr, an array of integers, and its logical size, arrSize. When called, it returns the sum of the squares of each of the values in arr. For example, if arr is an array containing [2, -1, 3, 10], calling sumOfSquares(arr, 4) will return 114 (since,  22 + (-1)2 + 32 + 102 = 114).  b. bool isSorted(int arr[], int arrSize)  This function is given arr, an array of integers, and its logical size, arrSize. When called, it should return true if the elements in arr are sorted in an ascending order, or false if they are not.    "
                ]
            },
            {
                "question_no": 3,
                "data": [
                    "Question 3: Write two recursive versions of the function minInArray. The function will be given a sequence of elements and should return the minimum value in that sequence. The two versions differ from one another in the technique we use to pass the sequence to the function.   In version 1 \u2013 The prototype of the function should be:  int minInArray1(int arr[], int arrSize) Here, the function is given arr, an array of integers, and its logical size, arrSize.  The function should find the minimum value out of all the elements in positions:  0, 1, 2, \u2026, arrSize-1.  In version 2 \u2013 The prototype of the function should be:  int minInArray2(int arr[], int low, int high) Here, the function is given arr, an array of integers, and two additional indices: low and high (low \u2264 high), which indicate the range of indices that need to be considered.  The function should find the minimum value out of all the elements in positions:  low, low+1, \u2026, high.   Use the following main to check your program: int main() {     int arr[10] = {9, -2, 14, 12, 3, 6, 2, 1, -9, 15};     int res1, res2, res3, res4;      res1 = minInArray1(arr, 10);     res2 = minInArray2(arr, 0, 9);     cout<<res1<<\u201d \u201c<<res2<<endl;  //should both be -9      res3 = minInArray2(arr, 2, 5);     res4 = minInArray1(arr+2, 4); //arr+2 is equivalent to &(arr[2])     cout<<res3<<\u201d \u201c<<res4<<endl;  //should both be 3      return 0; } "
                ]
            },
            {
                "question_no": 4,
                "data": [
                    "Question 4 (taken from Ch14 problem 6 in text):  The game of \u201cJump It\u201d consists of a board with n positive integers in a row, except for the first column, which always contains zero. These numbers represent the cost to enter each column. Here is a sample game board where n is 6:  0 3 80 6 57 10  The object of the game is to move from the first column to the last column with the lowest total cost.  The number in each column represents the cost to enter that column. You always start the game in the first column and have two types of moves. You can either move to the adjacent column or jump over the adjacent column to land two columns over. The cost of a game is the sum of the costs of the visited columns.  In the board shown above, there are several ways to get to the end. Starting in the first column, our cost so far is 0. We could jump to 80, then jump to 57, and then move to 10 for a total cost of 80 + 57 + 10 = 147. However, a cheaper path would be to move to 3, jump to 6, then jump to 10, for a total cost of 3 + 6 + 10 = 19.  Write a recursive function that solves this problem and returns the lowest cost of a game board represented and passed as an array.  Note: your function shouldn\u2019t output the actual sequence of jumps, only the lowest cost of this sequence.    "
                ]
            },
            {
                "question_no": 5,
                "data": [
                    "Question 5: a. Use mathematical induction to prove that for any positive integer \ud835\udc5b, 3 divide \ud835\udc5b\" + 2\ud835\udc5b (leaving no remainder). Hint: you may want to use the formula: (\ud835\udc4e + \ud835\udc4f)\" =",
                    "\ud835\udc4e\" + 3\ud835\udc4e#\ud835\udc4f + 3\ud835\udc4e\ud835\udc4f# +",
                    "\ud835\udc4f\". b. Use strong induction to prove that any positive integer \ud835\udc5b (\ud835\udc5b \u2265 2) can be written as a product of primes.   "
                ]
            },
            {
                "question_no": 6,
                "data": [
                    "Question 6: Solve the following questions from the Discrete Math zyBook: a) Exercise 7.4.1, sections a-g b) Exercise 7.4.3, section c  Hint: you may want to use the following fact:  $(&'$)\"\u2264 $&(&'$) c) Exercise 7.5.1, section a   "
                ]
            }
        ]
    }
]
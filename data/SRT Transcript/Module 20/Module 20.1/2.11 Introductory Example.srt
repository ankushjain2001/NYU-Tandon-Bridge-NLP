1
00:00:00,690 --> 00:00:05,650
Here we put the full version of the code segment
in MIPS mnemonic notation.

2
00:00:05,650 --> 00:00:07,990
The semicolon indicates the beginning of a
comment.

3
00:00:07,990 --> 00:00:10,519
So anything following the semicolon is a comment.

4
00:00:10,519 --> 00:00:14,419
This is similar to the forward slashes in
C or C++.

5
00:00:14,419 --> 00:00:20,290
Regarding the data segment, we know that each
double word data is 64 bits, or 8 bytes, because

6
00:00:20,290 --> 00:00:22,640
we are using MIPS64.

7
00:00:22,640 --> 00:00:26,980
So once we know the base address of the data
segment, we can find the addresses of all

8
00:00:26,980 --> 00:00:28,370
data in the segment.

9
00:00:28,370 --> 00:00:33,170
Note that this is the same approach that the
CPU uses to determine the address of data

10
00:00:33,170 --> 00:00:34,289
that it accesses.

11
00:00:34,289 --> 00:00:39,739
That is, the CPU uses the base address of
the data segment and the offset of the target

12
00:00:39,739 --> 00:00:41,870
data within the segment.

13
00:00:41,870 --> 00:00:45,850
So putting it all together, we get the following
notation for the code and data segments in

14
00:00:45,850 --> 00:00:46,890
MIPS mnemonic.

15
00:00:46,890 --> 00:00:49,639
Note that all addresses are in hexadecimal.


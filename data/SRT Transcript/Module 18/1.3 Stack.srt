1
00:00:00,610 --> 00:00:04,970
So our first data structure we're going to
talk about is a stack and the way that you

2
00:00:04,970 --> 00:00:11,759
can best understand this is if you think about
going to like a buffet at a large restaurant

3
00:00:11,759 --> 00:00:15,209
and at the beginning of the buffet there's
a stack of plates.

4
00:00:15,209 --> 00:00:19,770
And the plates are nice and warm they're recessed
into the table so the only plate that you

5
00:00:19,770 --> 00:00:22,950
can grab is the very top plate in the stack.

6
00:00:22,950 --> 00:00:28,060
So here we have this stack of plates it's
recessed into the table and all you can grab

7
00:00:28,060 --> 00:00:29,770
at is the very top of the stack.

8
00:00:29,770 --> 00:00:34,240
And that's one of the purposes of a stack
you can't access arbitrary information in

9
00:00:34,240 --> 00:00:35,240
the stack.

10
00:00:35,240 --> 00:00:40,690
So once you put things into the stack you
can access only the last thing that's been

11
00:00:40,690 --> 00:00:45,890
put into the stack and then on top of that
when it comes out of the stack you get the

12
00:00:45,890 --> 00:00:50,500
last thing that was put in so this is what's
called a last in first out or first in last

13
00:00:50,500 --> 00:00:52,600
out depending on who you talk to.

14
00:00:52,600 --> 00:00:55,950
Which is abbreviated as either a FILO or a
LIFO or a buffer.

15
00:00:55,950 --> 00:01:02,930
So the point here is that when we put things
into the stack the last item that we inserted

16
00:01:02,930 --> 00:01:06,190
is the first one that's removed from the stack.

17
00:01:06,190 --> 00:01:10,640
Now the functions that we use on a stack are
push and pop and top and those are the common

18
00:01:10,640 --> 00:01:12,280
functions that we use.

19
00:01:12,280 --> 00:01:17,600
Push to put something into the stack pop to
remove that top element from the stack.

20
00:01:17,600 --> 00:01:22,390
We have a couple of supplemental functions
that do other purposes of course like clear

21
00:01:22,390 --> 00:01:24,000
and is empty and size.

22
00:01:24,000 --> 00:01:28,180
You've probably seen these before they're
pretty common clear throws away everything

23
00:01:28,180 --> 00:01:32,200
that's on the stack so if you just want to
throw the whole stack away we can call clear.

24
00:01:32,200 --> 00:01:36,420
is empty tells us if there's anything left
on the stack so it will return true if there

25
00:01:36,420 --> 00:01:42,189
is something at least and size will tell us
how many things there are left on the stack.

26
00:01:42,189 --> 00:01:46,799
So we're going to work with these stacks and
we're going to design how the stack works

27
00:01:46,799 --> 00:01:47,479
in the next slide.

